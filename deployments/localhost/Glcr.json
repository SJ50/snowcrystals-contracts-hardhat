{
  "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_daoFund",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_devFund",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOperator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "OperatorTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DENOM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COMMUNITY_FUND_POOL_ALLOCATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEV_FUND_POOL_ALLOCATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FARMING_POOL_REWARD_ALLOCATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TAX_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VESTING_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityFundLastClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityFundRewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFundLastClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFundRewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_farmingIncentiveFund",
          "type": "address"
        }
      ],
      "name": "distributeReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dynamicTaxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableDynamicTax",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTaxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "governanceRecoverUnsupported",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isWhitelistedRecipient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isWhitelistedSender",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPoolDistributed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devFund",
          "type": "address"
        }
      ],
      "name": "setDevFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enableDynamicTax",
          "type": "bool"
        }
      ],
      "name": "setEnableDynamicTax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taxRate",
          "type": "uint256"
        }
      ],
      "name": "setStaticTaxRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_taxOffice",
          "type": "address"
        }
      ],
      "name": "setTaxOffice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_daoFund",
          "type": "address"
        }
      ],
      "name": "setTreasuryFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "setWhitelistType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staticTaxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxOffice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "successFlag",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOperator_",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unclaimedDevFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_pending",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unclaimedTreasuryFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_pending",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistType",
      "outputs": [
        {
          "internalType": "enum ERC20Taxable.WhitelistType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x73ecf664d13dd9ce44705bb33df78651d06e4c9dfa548abd111cd7f2afcf9e2e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
    "transactionIndex": 0,
    "gasUsed": "2297907",
    "logsBloom": "0x00000000000000000002000000000000000000000000000000800000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000020000008000000000001000000000000000000000040000000000800020000000000000100000800000000000000000000000010000000400000000100000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000002000000200000000000000000000000002000000000000000000020000000000000000000000000000000000001000000000000000000000000000000",
    "blockHash": "0x921c23803fc4642622cbc4e7f2f55583f99550bef699429539738d29ba4d0330",
    "transactionHash": "0x73ecf664d13dd9ce44705bb33df78651d06e4c9dfa548abd111cd7f2afcf9e2e",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 5279274,
        "transactionHash": "0x73ecf664d13dd9ce44705bb33df78651d06e4c9dfa548abd111cd7f2afcf9e2e",
        "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x921c23803fc4642622cbc4e7f2f55583f99550bef699429539738d29ba4d0330"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 5279274,
        "transactionHash": "0x73ecf664d13dd9ce44705bb33df78651d06e4c9dfa548abd111cd7f2afcf9e2e",
        "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
        "topics": [
          "0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x921c23803fc4642622cbc4e7f2f55583f99550bef699429539738d29ba4d0330"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 5279274,
        "transactionHash": "0x73ecf664d13dd9ce44705bb33df78651d06e4c9dfa548abd111cd7f2afcf9e2e",
        "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x0000000000000000000000000000000000000000000000008ac7230489e80000",
        "logIndex": 2,
        "blockHash": "0x921c23803fc4642622cbc4e7f2f55583f99550bef699429539738d29ba4d0330"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 5279274,
        "transactionHash": "0x73ecf664d13dd9ce44705bb33df78651d06e4c9dfa548abd111cd7f2afcf9e2e",
        "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000015af1d78b58c40000",
        "logIndex": 3,
        "blockHash": "0x921c23803fc4642622cbc4e7f2f55583f99550bef699429539738d29ba4d0330"
      }
    ],
    "blockNumber": 5279274,
    "cumulativeGasUsed": "2297907",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "snowcrystals.finance SHARE",
    "GLCR",
    1666852685,
    "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"
  ],
  "numDeployments": 1,
  "solcInputHash": "73395350a0819fb65c5145526fa0b4d9",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_daoFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devFund\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DENOM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMUNITY_FUND_POOL_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEV_FUND_POOL_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FARMING_POOL_REWARD_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TAX_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityFundLastClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityFundRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFundLastClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFundRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_farmingIncentiveFund\",\"type\":\"address\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dynamicTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableDynamicTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isWhitelistedRecipient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isWhitelistedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPoolDistributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devFund\",\"type\":\"address\"}],\"name\":\"setDevFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enableDynamicTax\",\"type\":\"bool\"}],\"name\":\"setEnableDynamicTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxRate\",\"type\":\"uint256\"}],\"name\":\"setStaticTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taxOffice\",\"type\":\"address\"}],\"name\":\"setTaxOffice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_daoFund\",\"type\":\"address\"}],\"name\":\"setTreasuryFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"setWhitelistType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staticTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxOffice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"successFlag\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclaimedDevFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_pending\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclaimedTreasuryFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_pending\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistType\",\"outputs\":[{\"internalType\":\"enum ERC20Taxable.WhitelistType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"claimRewards()\":{\"details\":\"Claim pending rewards to community and dev fund\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"distributeReward(address)\":{\"notice\":\"distribute to reward pool (only once)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Glcr.sol\":\"Glcr\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    using SafeMath for uint256;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n\\n        _approve(account, _msgSender(), decreasedAllowance);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x9c0eb3b0e11d2480d49991dc384f1e5f9c9b9967cc81944d50916a9b9c6c4984\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/Glcr.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./utils/ERC20Taxable.sol\\\";\\n\\n/*\\n    https://snowcrystals.finance\\n*/\\ncontract Glcr is ERC20Taxable {\\n    using SafeMath for uint256;\\n\\n    /*\\n        TOTAL MAX SUPPLY = 32000 GLCR\\n        - 21500 GLCRs allocated to farming pools\\n        - Airdop 25 GLCRs allocated to DAO wallet\\n        - Allocate 6975 GLCRs to DAO wallet for linear vesting\\n        - Allocate 3490 GLCRs to Dev wallet for linear vesting\\n        - 10 GLCRs for nitial pools deployment and Boardroom initialization \\n    */\\n    uint256 public constant FARMING_POOL_REWARD_ALLOCATION = 21500 ether;\\n    uint256 public constant COMMUNITY_FUND_POOL_ALLOCATION = 6975 ether;\\n    uint256 public constant DEV_FUND_POOL_ALLOCATION = 3490 ether;\\n\\n    uint256 public constant VESTING_DURATION = 52 weeks;\\n    uint256 public immutable startTime;\\n    uint256 public immutable endTime;\\n\\n    uint256 public immutable communityFundRewardRate;\\n    uint256 public immutable devFundRewardRate;\\n\\n    address public communityFund;\\n    address public devFund;\\n\\n    uint256 public communityFundLastClaimed;\\n    uint256 public devFundLastClaimed;\\n\\n    bool public rewardPoolDistributed = false;\\n\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 _startTime,\\n        address _daoFund,\\n        address _devFund\\n    ) public ERC20Taxable(name_, symbol_) {\\n        _mint(msg.sender, 10 ether); // mint 10 Share for initial pools deployment and Boardroom initialization\\n        _mint(_daoFund, 25 ether); // Airdop 25 GLCR allocated to DAO wallet\\n\\n        startTime = _startTime;\\n        endTime = _startTime + VESTING_DURATION;\\n\\n        communityFundLastClaimed = _startTime;\\n        devFundLastClaimed = _startTime;\\n\\n        communityFundRewardRate = COMMUNITY_FUND_POOL_ALLOCATION.div(\\n            VESTING_DURATION\\n        );\\n        devFundRewardRate = DEV_FUND_POOL_ALLOCATION.div(VESTING_DURATION);\\n\\n        require(_devFund != address(0), \\\"Address cannot be 0\\\");\\n        devFund = _devFund;\\n\\n        require(_daoFund != address(0), \\\"Address cannot be 0\\\");\\n        communityFund = _daoFund;\\n    }\\n\\n    function setTreasuryFund(address _daoFund) external {\\n        require(msg.sender == devFund, \\\"!dev\\\");\\n        communityFund = _daoFund;\\n    }\\n\\n    function setDevFund(address _devFund) external {\\n        require(msg.sender == devFund, \\\"!dev\\\");\\n        require(_devFund != address(0), \\\"zero\\\");\\n        devFund = _devFund;\\n    }\\n\\n    function unclaimedTreasuryFund() public view returns (uint256 _pending) {\\n        uint256 _now = block.timestamp;\\n        if (_now > endTime) _now = endTime;\\n        if (communityFundLastClaimed >= _now) return 0;\\n        _pending = _now.sub(communityFundLastClaimed).mul(\\n            communityFundRewardRate\\n        );\\n    }\\n\\n    function unclaimedDevFund() public view returns (uint256 _pending) {\\n        uint256 _now = block.timestamp;\\n        if (_now > endTime) _now = endTime;\\n        if (devFundLastClaimed >= _now) return 0;\\n        _pending = _now.sub(devFundLastClaimed).mul(devFundRewardRate);\\n    }\\n\\n    /**\\n     * @dev Claim pending rewards to community and dev fund\\n     */\\n    function claimRewards() external {\\n        uint256 _pending = unclaimedTreasuryFund();\\n        if (_pending > 0 && communityFund != address(0)) {\\n            _mint(communityFund, _pending);\\n            communityFundLastClaimed = block.timestamp;\\n        }\\n        _pending = unclaimedDevFund();\\n        if (_pending > 0 && devFund != address(0)) {\\n            _mint(devFund, _pending);\\n            devFundLastClaimed = block.timestamp;\\n        }\\n    }\\n\\n    /**\\n     * @notice distribute to reward pool (only once)\\n     */\\n    function distributeReward(address _farmingIncentiveFund)\\n        external\\n        onlyOperator\\n    {\\n        require(!rewardPoolDistributed, \\\"only can distribute once\\\");\\n        require(\\n            _farmingIncentiveFund != address(0) &&\\n                _farmingIncentiveFund != address(this),\\n            \\\"!_farmingIncentiveFund\\\"\\n        );\\n        rewardPoolDistributed = true;\\n        _mint(_farmingIncentiveFund, FARMING_POOL_REWARD_ALLOCATION);\\n    }\\n\\n    //*================ TAX FUNCTIONS ================*//\\n\\n    function _updateDynamicTaxRate() internal override {\\n        dynamicTaxRate = ITaxOffice(taxOffice).calculateShareTokenTax();\\n    }\\n\\n    function _handleTax(address _sender, uint256 _amount) internal override {\\n        _approve(_sender, taxOffice, _amount);\\n        //Use inherited function to transferFrom.\\n        ERC20.transferFrom(_sender, taxOffice, _amount);\\n        ITaxOffice(taxOffice).handleShareTokenTax(_amount);\\n    }\\n}\\n\",\"keccak256\":\"0x870cd7ee06fd21b131910de1f44e6991aeea9f946b585ac2ed436a03e8839846\",\"license\":\"MIT\"},\"contracts/access/Operator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract Operator is Context, Ownable {\\n    address private _operator;\\n\\n    event OperatorTransferred(\\n        address indexed previousOperator,\\n        address indexed newOperator\\n    );\\n\\n    constructor() internal {\\n        _operator = _msgSender();\\n        emit OperatorTransferred(address(0), _operator);\\n    }\\n\\n    function operator() public view returns (address) {\\n        return _operator;\\n    }\\n\\n    modifier onlyOperator() {\\n        require(\\n            _operator == msg.sender,\\n            \\\"operator: caller is not the operator\\\"\\n        );\\n        _;\\n    }\\n\\n    function isOperator() public view returns (bool) {\\n        return _msgSender() == _operator;\\n    }\\n\\n    function transferOperator(address newOperator_) public onlyOwner {\\n        _transferOperator(newOperator_);\\n    }\\n\\n    function _transferOperator(address newOperator_) internal {\\n        require(\\n            newOperator_ != address(0),\\n            \\\"operator: zero address given for new operator\\\"\\n        );\\n        emit OperatorTransferred(address(0), newOperator_);\\n        _operator = newOperator_;\\n    }\\n}\\n\",\"keccak256\":\"0xb5055492468980c849d82c7f7a2de99c566b3b028f45112bffc0a1c8c697d831\",\"license\":\"MIT\"},\"contracts/interfaces/ITaxOffice.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface ITaxOffice {\\n    function setMainTokenOracle(address _mainTokenOracle) external;\\n\\n    function setMainTokenTaxTiers(\\n        uint256[] calldata _mainTokenTaxTwapTiers,\\n        uint256[] calldata _mainTokenTaxRateTiers\\n    ) external;\\n\\n    function setShareTokenTaxTiers(\\n        uint256[] calldata _shareTokenTaxTwapTiers,\\n        uint256[] calldata _shareTokenTaxRateTiers\\n    ) external;\\n\\n    function calculateMainTokenTax() external view returns (uint256 taxRate);\\n\\n    function calculateShareTokenTax() external view returns (uint256 taxRate);\\n\\n    function handleMainTokenTax(uint256 _amount) external;\\n\\n    function handleShareTokenTax(uint256 _amount) external;\\n\\n    function taxDiscount(address _sender, address _recipient)\\n        external\\n        returns (uint256);\\n\\n    function updateMainTokenPrice() external;\\n\\n    function sendToBonus(\\n        uint256 _price,\\n        uint256 _ceilingPrice,\\n        uint256 _nextEpochPoint\\n    ) external;\\n}\\n\",\"keccak256\":\"0x9dd8a1d2c9daf5b7e9fb8063a4bf40c2728b238586a330357da4e0739655094b\",\"license\":\"MIT\"},\"contracts/utils/ERC20Taxable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\nimport \\\"../access/Operator.sol\\\";\\nimport \\\"../interfaces/ITaxOffice.sol\\\";\\n\\ncontract ERC20Taxable is ERC20, ERC20Burnable, Operator {\\n    using SafeMath for uint256;\\n\\n    enum WhitelistType {\\n        NONE,\\n        SENDER,\\n        RECIPIENT,\\n        BOTH\\n    }\\n\\n    mapping(address => WhitelistType) public whitelistType;\\n\\n    bool public enableDynamicTax;\\n    uint256 public constant BASIS_POINTS_DENOM = 10_000;\\n    uint256 public constant MAX_TAX_RATE = 3_500;\\n    uint256 public staticTaxRate;\\n    uint256 public dynamicTaxRate;\\n\\n    address public taxOffice;\\n    uint256 public taxRate;\\n\\n    constructor(string memory _name, string memory _symbol)\\n        public\\n        ERC20(_name, _symbol)\\n    {}\\n\\n    modifier onlyTaxOffice() {\\n        require(taxOffice == msg.sender, \\\"Error: Caller is not the tax office\\\");\\n        _;\\n    }\\n\\n    function setTaxOffice(address _taxOffice) external onlyOperator {\\n        taxOffice = _taxOffice;\\n    }\\n\\n    function setStaticTaxRate(uint256 _taxRate) external onlyTaxOffice {\\n        require(_taxRate <= MAX_TAX_RATE, \\\"Error: Max tax rate exceeded.\\\");\\n        staticTaxRate = _taxRate;\\n    }\\n\\n    function setEnableDynamicTax(bool _enableDynamicTax)\\n        external\\n        onlyTaxOffice\\n    {\\n        enableDynamicTax = _enableDynamicTax;\\n    }\\n\\n    function setWhitelistType(address _account, uint8 _type)\\n        external\\n        onlyTaxOffice\\n    {\\n        whitelistType[_account] = WhitelistType(_type);\\n    }\\n\\n    function isWhitelistedSender(address _account)\\n        public\\n        view\\n        returns (bool isWhitelisted)\\n    {\\n        isWhitelisted =\\n            whitelistType[_account] == WhitelistType.SENDER ||\\n            whitelistType[_account] == WhitelistType.BOTH;\\n    }\\n\\n    function isWhitelistedRecipient(address _account)\\n        public\\n        view\\n        returns (bool isWhitelisted)\\n    {\\n        isWhitelisted =\\n            whitelistType[_account] == WhitelistType.RECIPIENT ||\\n            whitelistType[_account] == WhitelistType.BOTH;\\n    }\\n\\n    function getCurrentTaxRate() public returns (uint256) {\\n        taxRate = staticTaxRate;\\n        if (enableDynamicTax == true) {\\n            _updateDynamicTaxRate();\\n            if (dynamicTaxRate > MAX_TAX_RATE) {\\n                dynamicTaxRate = MAX_TAX_RATE;\\n            }\\n            taxRate = dynamicTaxRate;\\n        }\\n        return taxRate;\\n    }\\n\\n    function transferFrom(\\n        address _sender,\\n        address _recipient,\\n        uint256 _amount\\n    ) public override returns (bool successFlag) {\\n        //If neither the sender or recipient are whitelisted then apply tax.\\n        if (\\n            !isWhitelistedSender(_sender) && !isWhitelistedRecipient(_recipient)\\n        ) {\\n            //Calculate tax amount and then handle tax.\\n            uint256 _taxRate = getCurrentTaxRate();\\n            if (_taxRate > 0) {\\n                uint256 taxDiscount = BASIS_POINTS_DENOM.sub(\\n                    ITaxOffice(taxOffice).taxDiscount(_sender, _recipient)\\n                );\\n\\n                _taxRate = _taxRate.mul(taxDiscount).div(BASIS_POINTS_DENOM);\\n                uint256 taxableAmount = _amount.mul(_taxRate).div(\\n                    BASIS_POINTS_DENOM\\n                );\\n                _amount = _amount.sub(taxableAmount);\\n                _handleTax(_sender, taxableAmount);\\n            }\\n        }\\n\\n        //Use inherited function to transferFrom.\\n        successFlag = ERC20.transferFrom(_sender, _recipient, _amount);\\n    }\\n\\n    //Overrideable functions for the inheriting contract to dictate tax rates.\\n    function _updateDynamicTaxRate() internal virtual {}\\n\\n    function _handleTax(address _sender, uint256 _amount) internal virtual {}\\n\\n    function governanceRecoverUnsupported(\\n        IERC20 _token,\\n        uint256 _amount,\\n        address _to\\n    ) external onlyOperator {\\n        _token.transfer(_to, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xd661198c0bcbbe6abcb234feace3ce8ba87a14f3249c0beed1ff4b7afde84cb7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101006040526011805460ff191690553480156200001c57600080fd5b5060405162002a8d38038062002a8d833981810160405260a08110156200004257600080fd5b81019080805160405193929190846401000000008211156200006357600080fd5b9083019060208201858111156200007957600080fd5b82516401000000008111828201881017156200009457600080fd5b82525081516020918201929091019080838360005b83811015620000c3578181015183820152602001620000a9565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b9083019060208201858111156200012b57600080fd5b82516401000000008111828201881017156200014657600080fd5b82525081516020918201929091019080838360005b83811015620001755781810151838201526020016200015b565b50505050905090810190601f168015620001a35780820380516001836020036101000a031916815260200191505b5060409081526020828101519183015160609093015187519295509293508691869183918391620001da9160039185019062000616565b508051620001f090600490602084019062000616565b50506005805460ff191660121790555060006200020c62000433565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200026c62000433565b600680546001600160a01b0319166001600160a01b0392831617908190556040519116906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a350620002cf905033678ac7230489e8000062000437565b620002e48268015af1d78b58c4000062000437565b60808390526301dfe20080840160a052600f8490556010849055620003219069017a1d91e8ddbd9c00009062000546602090811b6200188417901c565b60c0526200034968bd317abd30014800006301dfe20062000546602090811b6200188417901c565b60e0526001600160a01b0381166200039e576040805162461bcd60e51b81526020600482015260136024820152720416464726573732063616e6e6f74206265203606c1b604482015290519081900360640190fd5b600e80546001600160a01b0319166001600160a01b0383811691909117909155821662000408576040805162461bcd60e51b81526020600482015260136024820152720416464726573732063616e6e6f74206265203606c1b604482015290519081900360640190fd5b50600d80546001600160a01b0319166001600160a01b039290921691909117905550620006b2915050565b3390565b6001600160a01b03821662000493576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620004a160008383620005af565b620004bd81600254620005b460201b620018eb1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620004f0918390620018eb620005b4821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008082116200059d576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381620005a757fe5b049392505050565b505050565b6000828201838110156200060f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200065957805160ff191683800117855562000689565b8280016001018555821562000689579182015b82811115620006895782518255916020019190600101906200066c565b50620006979291506200069b565b5090565b5b808211156200069757600081556001016200069c565b60805160a05160c05160e0516123876200070660003980610e895280610ebf525080610b375280611126525080610ad65280610aff5280610e285280610e515280610eec52508061138e52506123876000f3fe608060405234801561001057600080fd5b50600436106103615760003560e01c80634f337dd5116101c85780638fa8173211610104578063ae4db919116100a2578063f1b15c941161007c578063f1b15c9414610835578063f2fde38b1461083d578063f746b71814610863578063fe46be441461088957610361565b8063ae4db919146107c4578063dd62ed3e146107ea578063e1ea1fa31461081857610361565b8063a06160fd116100de578063a06160fd1461075c578063a457c2d714610764578063a9059cbb14610790578063abb4b1be146107bc57610361565b80638fa817321461074457806395d89b411461074c5780639662676c1461075457610361565b8063678014b011610171578063771a3a1d1161014b578063771a3a1d1461070057806378e979251461070857806379cc6790146107105780638da5cb5b1461073c57610361565b8063678014b0146106ca57806370a08231146106d2578063715018a6146106f857610361565b8063570ca735116101a2578063570ca735146106b257806361482bed146106ba57806364f53f2e146106c257610361565b80634f337dd51461066c5780635024ec1f1461067457806354575af41461067c57610361565b8063313ce567116102a25780633f07d76a116102405780634456eda21161021a5780634456eda21461062e57806344cdc45414610636578063483846401461063e5780634cfc4d301461066457610361565b80633f07d76a146105e357806342966c68146106095780634390d2a81461062657610361565b806338d2776e1161027c57806338d2776e1461058857806339509351146105a75780633bba8eed146105d35780633e5f13d4146105db57610361565b8063313ce5671461055a5780633197cbb614610578578063372500ab1461058057610361565b806318160ddd1161030f57806323b872dd116102e957806323b872dd146104ee57806329605e77146105245780632c07a6241461054a5780632e3367ce1461055257610361565b806318160ddd146104915780631b9e2fad14610499578063232798df146104bf57610361565b8063092193ab11610340578063092193ab14610421578063095ea7b314610449578063177647821461048957610361565b8062f380f414610366578063040173151461038a57806306fdde03146103a4575b600080fd5b61036e6108d0565b604080516001600160a01b039092168252519081900360200190f35b6103926108df565b60408051918252519081900360200190f35b6103ac6108e5565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103e65781810151838201526020016103ce565b50505050905090810190601f1680156104135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104476004803603602081101561043757600080fd5b50356001600160a01b031661097c565b005b6104756004803603604081101561045f57600080fd5b506001600160a01b038135169060200135610ab3565b604080519115158252519081900360200190f35b610392610ad1565b610392610b77565b610475600480360360208110156104af57600080fd5b50356001600160a01b0316610b7d565b610447600480360360408110156104d557600080fd5b5080356001600160a01b0316906020013560ff16610be0565b6104756004803603606081101561050457600080fd5b506001600160a01b03813581169160208101359091169060400135610c6d565b6104476004803603602081101561053a57600080fd5b50356001600160a01b0316610da6565b610392610e23565b610392610ebd565b610562610ee1565b6040805160ff9092168252519081900360200190f35b610392610eea565b610447610f0e565b6104476004803603602081101561059e57600080fd5b50351515610f9a565b610475600480360360408110156105bd57600080fd5b506001600160a01b038135169060200135610ff6565b610392611049565b61036e611057565b610447600480360360208110156105f957600080fd5b50356001600160a01b0316611066565b6104476004803603602081101561061f57600080fd5b50356110de565b61036e6110ef565b6104756110fe565b610392611124565b6104756004803603602081101561065457600080fd5b50356001600160a01b0316611148565b610392611151565b610392611159565b610392611166565b6104476004803603606081101561069257600080fd5b506001600160a01b0381358116916020810135916040909101351661116c565b61036e61123d565b61039261124c565b610392611252565b610392611294565b610392600480360360208110156106e857600080fd5b50356001600160a01b031661129a565b6104476112b5565b610392611386565b61039261138c565b6104476004803603604081101561072657600080fd5b506001600160a01b0381351690602001356113b0565b61036e61140a565b61039261141e565b6103ac611424565b610475611485565b61039261148e565b6104756004803603604081101561077a57600080fd5b506001600160a01b03813516906020013561149c565b610475600480360360408110156107a657600080fd5b506001600160a01b038135169060200135611504565b610392611518565b610447600480360360208110156107da57600080fd5b50356001600160a01b031661151e565b6103926004803603604081101561080057600080fd5b506001600160a01b03813581169160200135166115f2565b6104476004803603602081101561082e57600080fd5b503561161d565b6104756116c2565b6104476004803603602081101561085357600080fd5b50356001600160a01b03166116cb565b6104476004803603602081101561087957600080fd5b50356001600160a01b03166117f8565b6108af6004803603602081101561089f57600080fd5b50356001600160a01b031661186f565b604051808260038111156108bf57fe5b815260200191505060405180910390f35b600d546001600160a01b031681565b60105481565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109715780601f1061094657610100808354040283529160200191610971565b820191906000526020600020905b81548152906001019060200180831161095457829003601f168201915b505050505090505b90565b6006546001600160a01b031633146109c55760405162461bcd60e51b815260040180806020018281038252602481526020018061229f6024913960400191505060405180910390fd5b60115460ff1615610a1d576040805162461bcd60e51b815260206004820152601860248201527f6f6e6c792063616e2064697374726962757465206f6e63650000000000000000604482015290519081900360640190fd5b6001600160a01b03811615801590610a3e57506001600160a01b0381163014155b610a8f576040805162461bcd60e51b815260206004820152601660248201527f215f6661726d696e67496e63656e7469766546756e6400000000000000000000604482015290519081900360640190fd5b6011805460ff19166001179055610ab08169048d8470181e3270000061194c565b50565b6000610ac7610ac0611a3c565b8484611a40565b5060015b92915050565b6000427f0000000000000000000000000000000000000000000000000000000000000000811115610b1f57507f00000000000000000000000000000000000000000000000000000000000000005b80600f5410610b32576000915050610979565b610b717f0000000000000000000000000000000000000000000000000000000000000000610b6b600f5484611b2c90919063ffffffff16565b90611b89565b91505090565b60025490565b600060015b6001600160a01b03831660009081526007602052604090205460ff166003811115610ba957fe5b1480610acb575060036001600160a01b03831660009081526007602052604090205460ff166003811115610bd957fe5b1492915050565b600b546001600160a01b03163314610c295760405162461bcd60e51b81526004018080602001828103825260238152602001806121e26023913960400191505060405180910390fd5b8060ff166003811115610c3857fe5b6001600160a01b0383166000908152600760205260409020805460ff19166001836003811115610c6457fe5b02179055505050565b6000610c7884610b7d565b158015610c8b5750610c8983611148565b155b15610d93576000610c9a611252565b90508015610d9157600b54604080517f5803abaa0000000000000000000000000000000000000000000000000000000081526001600160a01b03888116600483015287811660248301529151600093610d4a931691635803abaa91604480830192602092919082900301818887803b158015610d1557600080fd5b505af1158015610d29573d6000803e3d6000fd5b505050506040513d6020811015610d3f57600080fd5b505161271090611b2c565b9050610d62612710610d5c8484611b89565b90611884565b91506000610d76612710610d5c8786611b89565b9050610d828582611b2c565b9450610d8e8782611be2565b50505b505b610d9e848484611c95565b949350505050565b610dae611a3c565b6001600160a01b0316610dbf61140a565b6001600160a01b031614610e1a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610ab081611d17565b6000427f0000000000000000000000000000000000000000000000000000000000000000811115610e7157507f00000000000000000000000000000000000000000000000000000000000000005b8060105410610e84576000915050610979565b610b717f0000000000000000000000000000000000000000000000000000000000000000610b6b60105484611b2c90919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610f18610ad1565b9050600081118015610f345750600d546001600160a01b031615155b15610f5457600d54610f4f906001600160a01b03168261194c565b42600f555b610f5c610e23565b9050600081118015610f785750600e546001600160a01b031615155b15610ab057600e54610f93906001600160a01b03168261194c565b4260105550565b600b546001600160a01b03163314610fe35760405162461bcd60e51b81526004018080602001828103825260238152602001806121e26023913960400191505060405180910390fd5b6008805460ff1916911515919091179055565b6000610ac7611003611a3c565b846110448560016000611014611a3c565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906118eb565b611a40565b69017a1d91e8ddbd9c000081565b600b546001600160a01b031681565b6006546001600160a01b031633146110af5760405162461bcd60e51b815260040180806020018281038252602481526020018061229f6024913960400191505060405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610ab06110e9611a3c565b82611dc1565b600e546001600160a01b031681565b6006546000906001600160a01b0316611115611a3c565b6001600160a01b031614905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006002610b82565b6301dfe20081565b68bd317abd300148000081565b60095481565b6006546001600160a01b031633146111b55760405162461bcd60e51b815260040180806020018281038252602481526020018061229f6024913960400191505060405180910390fd5b826001600160a01b031663a9059cbb82846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561120c57600080fd5b505af1158015611220573d6000803e3d6000fd5b505050506040513d602081101561123657600080fd5b5050505050565b6006546001600160a01b031690565b600a5481565b600954600c5560085460009060ff1615156001141561128d57611273611ebd565b610dac600a54111561128657610dac600a555b600a54600c555b50600c5490565b61271081565b6001600160a01b031660009081526020819052604090205490565b6112bd611a3c565b6001600160a01b03166112ce61140a565b6001600160a01b031614611329576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805474ffffffffffffffffffffffffffffffffffffffff0019169055565b600c5481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006113e78260405180606001604052806024815260200161227b602491396113e0866113db611a3c565b6115f2565b9190611f3c565b90506113fb836113f5611a3c565b83611a40565b6114058383611dc1565b505050565b60055461010090046001600160a01b031690565b610dac81565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109715780601f1061094657610100808354040283529160200191610971565b60115460ff1681565b69048d8470181e3270000081565b6000610ac76114a9611a3c565b846110448560405180606001604052806025815260200161232d60259139600160006114d3611a3c565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611f3c565b6000610ac7611511611a3c565b8484611fd3565b600f5481565b600e546001600160a01b03163314611566576040805162461bcd60e51b8152602060048083019190915260248201526310b232bb60e11b604482015290519081900360640190fd5b6001600160a01b0381166115c3576040805162461bcd60e51b8152602060048083019190915260248201527f7a65726f00000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600e805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600b546001600160a01b031633146116665760405162461bcd60e51b81526004018080602001828103825260238152602001806121e26023913960400191505060405180910390fd5b610dac8111156116bd576040805162461bcd60e51b815260206004820152601d60248201527f4572726f723a204d61782074617820726174652065786365656465642e000000604482015290519081900360640190fd5b600955565b60085460ff1681565b6116d3611a3c565b6001600160a01b03166116e461140a565b6001600160a01b03161461173f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166117845760405162461bcd60e51b81526004018080602001828103825260268152602001806121746026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b600e546001600160a01b03163314611840576040805162461bcd60e51b8152602060048083019190915260248201526310b232bb60e11b604482015290519081900360640190fd5b600d805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60076020526000908152604090205460ff1681565b60008082116118da576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816118e357fe5b049392505050565b600082820183811015611945576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166119a7576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6119b360008383611405565b6002546119c090826118eb565b6002556001600160a01b0382166000908152602081905260409020546119e690826118eb565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b3390565b6001600160a01b038316611a855760405162461bcd60e51b81526004018080602001828103825260248152602001806123096024913960400191505060405180910390fd5b6001600160a01b038216611aca5760405162461bcd60e51b815260040180806020018281038252602281526020018061219a6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600082821115611b83576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082611b9857506000610acb565b82820282848281611ba557fe5b04146119455760405162461bcd60e51b81526004018080602001828103825260218152602001806122326021913960400191505060405180910390fd5b600b54611bfa9083906001600160a01b031683611a40565b600b54611c129083906001600160a01b031683611c95565b50600b54604080517febaf41560000000000000000000000000000000000000000000000000000000081526004810184905290516001600160a01b039092169163ebaf41569160248082019260009290919082900301818387803b158015611c7957600080fd5b505af1158015611c8d573d6000803e3d6000fd5b505050505050565b6000611ca2848484611fd3565b611d0d84611cae611a3c565b61104485604051806060016040528060288152602001612253602891396001600160a01b038a16600090815260016020526040812090611cec611a3c565b6001600160a01b031681526020810191909152604001600020549190611f3c565b5060019392505050565b6001600160a01b038116611d5c5760405162461bcd60e51b815260040180806020018281038252602d815260200180612205602d913960400191505060405180910390fd5b6040516001600160a01b038216906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a36006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b038216611e065760405162461bcd60e51b81526004018080602001828103825260218152602001806122c36021913960400191505060405180910390fd5b611e1282600083611405565b611e4f81604051806060016040528060228152602001612152602291396001600160a01b0385166000908152602081905260409020549190611f3c565b6001600160a01b038316600090815260208190526040902055600254611e759082611b2c565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663d27428136040518163ffffffff1660e01b815260040160206040518083038186803b158015611f0b57600080fd5b505afa158015611f1f573d6000803e3d6000fd5b505050506040513d6020811015611f3557600080fd5b5051600a55565b60008184841115611fcb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f90578181015183820152602001611f78565b50505050905090810190601f168015611fbd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166120185760405162461bcd60e51b81526004018080602001828103825260258152602001806122e46025913960400191505060405180910390fd5b6001600160a01b03821661205d5760405162461bcd60e51b815260040180806020018281038252602381526020018061212f6023913960400191505060405180910390fd5b612068838383611405565b6120a5816040518060600160405280602681526020016121bc602691396001600160a01b0386166000908152602081905260409020549190611f3c565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546120d490826118eb565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654572726f723a2043616c6c6572206973206e6f742074686520746178206f66666963656f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63656f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f7245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205a9521166a91eb398fa92989e8e56af6bf3d0ba43cabf723b83730892a82e9f664736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103615760003560e01c80634f337dd5116101c85780638fa8173211610104578063ae4db919116100a2578063f1b15c941161007c578063f1b15c9414610835578063f2fde38b1461083d578063f746b71814610863578063fe46be441461088957610361565b8063ae4db919146107c4578063dd62ed3e146107ea578063e1ea1fa31461081857610361565b8063a06160fd116100de578063a06160fd1461075c578063a457c2d714610764578063a9059cbb14610790578063abb4b1be146107bc57610361565b80638fa817321461074457806395d89b411461074c5780639662676c1461075457610361565b8063678014b011610171578063771a3a1d1161014b578063771a3a1d1461070057806378e979251461070857806379cc6790146107105780638da5cb5b1461073c57610361565b8063678014b0146106ca57806370a08231146106d2578063715018a6146106f857610361565b8063570ca735116101a2578063570ca735146106b257806361482bed146106ba57806364f53f2e146106c257610361565b80634f337dd51461066c5780635024ec1f1461067457806354575af41461067c57610361565b8063313ce567116102a25780633f07d76a116102405780634456eda21161021a5780634456eda21461062e57806344cdc45414610636578063483846401461063e5780634cfc4d301461066457610361565b80633f07d76a146105e357806342966c68146106095780634390d2a81461062657610361565b806338d2776e1161027c57806338d2776e1461058857806339509351146105a75780633bba8eed146105d35780633e5f13d4146105db57610361565b8063313ce5671461055a5780633197cbb614610578578063372500ab1461058057610361565b806318160ddd1161030f57806323b872dd116102e957806323b872dd146104ee57806329605e77146105245780632c07a6241461054a5780632e3367ce1461055257610361565b806318160ddd146104915780631b9e2fad14610499578063232798df146104bf57610361565b8063092193ab11610340578063092193ab14610421578063095ea7b314610449578063177647821461048957610361565b8062f380f414610366578063040173151461038a57806306fdde03146103a4575b600080fd5b61036e6108d0565b604080516001600160a01b039092168252519081900360200190f35b6103926108df565b60408051918252519081900360200190f35b6103ac6108e5565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103e65781810151838201526020016103ce565b50505050905090810190601f1680156104135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104476004803603602081101561043757600080fd5b50356001600160a01b031661097c565b005b6104756004803603604081101561045f57600080fd5b506001600160a01b038135169060200135610ab3565b604080519115158252519081900360200190f35b610392610ad1565b610392610b77565b610475600480360360208110156104af57600080fd5b50356001600160a01b0316610b7d565b610447600480360360408110156104d557600080fd5b5080356001600160a01b0316906020013560ff16610be0565b6104756004803603606081101561050457600080fd5b506001600160a01b03813581169160208101359091169060400135610c6d565b6104476004803603602081101561053a57600080fd5b50356001600160a01b0316610da6565b610392610e23565b610392610ebd565b610562610ee1565b6040805160ff9092168252519081900360200190f35b610392610eea565b610447610f0e565b6104476004803603602081101561059e57600080fd5b50351515610f9a565b610475600480360360408110156105bd57600080fd5b506001600160a01b038135169060200135610ff6565b610392611049565b61036e611057565b610447600480360360208110156105f957600080fd5b50356001600160a01b0316611066565b6104476004803603602081101561061f57600080fd5b50356110de565b61036e6110ef565b6104756110fe565b610392611124565b6104756004803603602081101561065457600080fd5b50356001600160a01b0316611148565b610392611151565b610392611159565b610392611166565b6104476004803603606081101561069257600080fd5b506001600160a01b0381358116916020810135916040909101351661116c565b61036e61123d565b61039261124c565b610392611252565b610392611294565b610392600480360360208110156106e857600080fd5b50356001600160a01b031661129a565b6104476112b5565b610392611386565b61039261138c565b6104476004803603604081101561072657600080fd5b506001600160a01b0381351690602001356113b0565b61036e61140a565b61039261141e565b6103ac611424565b610475611485565b61039261148e565b6104756004803603604081101561077a57600080fd5b506001600160a01b03813516906020013561149c565b610475600480360360408110156107a657600080fd5b506001600160a01b038135169060200135611504565b610392611518565b610447600480360360208110156107da57600080fd5b50356001600160a01b031661151e565b6103926004803603604081101561080057600080fd5b506001600160a01b03813581169160200135166115f2565b6104476004803603602081101561082e57600080fd5b503561161d565b6104756116c2565b6104476004803603602081101561085357600080fd5b50356001600160a01b03166116cb565b6104476004803603602081101561087957600080fd5b50356001600160a01b03166117f8565b6108af6004803603602081101561089f57600080fd5b50356001600160a01b031661186f565b604051808260038111156108bf57fe5b815260200191505060405180910390f35b600d546001600160a01b031681565b60105481565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109715780601f1061094657610100808354040283529160200191610971565b820191906000526020600020905b81548152906001019060200180831161095457829003601f168201915b505050505090505b90565b6006546001600160a01b031633146109c55760405162461bcd60e51b815260040180806020018281038252602481526020018061229f6024913960400191505060405180910390fd5b60115460ff1615610a1d576040805162461bcd60e51b815260206004820152601860248201527f6f6e6c792063616e2064697374726962757465206f6e63650000000000000000604482015290519081900360640190fd5b6001600160a01b03811615801590610a3e57506001600160a01b0381163014155b610a8f576040805162461bcd60e51b815260206004820152601660248201527f215f6661726d696e67496e63656e7469766546756e6400000000000000000000604482015290519081900360640190fd5b6011805460ff19166001179055610ab08169048d8470181e3270000061194c565b50565b6000610ac7610ac0611a3c565b8484611a40565b5060015b92915050565b6000427f0000000000000000000000000000000000000000000000000000000000000000811115610b1f57507f00000000000000000000000000000000000000000000000000000000000000005b80600f5410610b32576000915050610979565b610b717f0000000000000000000000000000000000000000000000000000000000000000610b6b600f5484611b2c90919063ffffffff16565b90611b89565b91505090565b60025490565b600060015b6001600160a01b03831660009081526007602052604090205460ff166003811115610ba957fe5b1480610acb575060036001600160a01b03831660009081526007602052604090205460ff166003811115610bd957fe5b1492915050565b600b546001600160a01b03163314610c295760405162461bcd60e51b81526004018080602001828103825260238152602001806121e26023913960400191505060405180910390fd5b8060ff166003811115610c3857fe5b6001600160a01b0383166000908152600760205260409020805460ff19166001836003811115610c6457fe5b02179055505050565b6000610c7884610b7d565b158015610c8b5750610c8983611148565b155b15610d93576000610c9a611252565b90508015610d9157600b54604080517f5803abaa0000000000000000000000000000000000000000000000000000000081526001600160a01b03888116600483015287811660248301529151600093610d4a931691635803abaa91604480830192602092919082900301818887803b158015610d1557600080fd5b505af1158015610d29573d6000803e3d6000fd5b505050506040513d6020811015610d3f57600080fd5b505161271090611b2c565b9050610d62612710610d5c8484611b89565b90611884565b91506000610d76612710610d5c8786611b89565b9050610d828582611b2c565b9450610d8e8782611be2565b50505b505b610d9e848484611c95565b949350505050565b610dae611a3c565b6001600160a01b0316610dbf61140a565b6001600160a01b031614610e1a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610ab081611d17565b6000427f0000000000000000000000000000000000000000000000000000000000000000811115610e7157507f00000000000000000000000000000000000000000000000000000000000000005b8060105410610e84576000915050610979565b610b717f0000000000000000000000000000000000000000000000000000000000000000610b6b60105484611b2c90919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610f18610ad1565b9050600081118015610f345750600d546001600160a01b031615155b15610f5457600d54610f4f906001600160a01b03168261194c565b42600f555b610f5c610e23565b9050600081118015610f785750600e546001600160a01b031615155b15610ab057600e54610f93906001600160a01b03168261194c565b4260105550565b600b546001600160a01b03163314610fe35760405162461bcd60e51b81526004018080602001828103825260238152602001806121e26023913960400191505060405180910390fd5b6008805460ff1916911515919091179055565b6000610ac7611003611a3c565b846110448560016000611014611a3c565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906118eb565b611a40565b69017a1d91e8ddbd9c000081565b600b546001600160a01b031681565b6006546001600160a01b031633146110af5760405162461bcd60e51b815260040180806020018281038252602481526020018061229f6024913960400191505060405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610ab06110e9611a3c565b82611dc1565b600e546001600160a01b031681565b6006546000906001600160a01b0316611115611a3c565b6001600160a01b031614905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006002610b82565b6301dfe20081565b68bd317abd300148000081565b60095481565b6006546001600160a01b031633146111b55760405162461bcd60e51b815260040180806020018281038252602481526020018061229f6024913960400191505060405180910390fd5b826001600160a01b031663a9059cbb82846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561120c57600080fd5b505af1158015611220573d6000803e3d6000fd5b505050506040513d602081101561123657600080fd5b5050505050565b6006546001600160a01b031690565b600a5481565b600954600c5560085460009060ff1615156001141561128d57611273611ebd565b610dac600a54111561128657610dac600a555b600a54600c555b50600c5490565b61271081565b6001600160a01b031660009081526020819052604090205490565b6112bd611a3c565b6001600160a01b03166112ce61140a565b6001600160a01b031614611329576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805474ffffffffffffffffffffffffffffffffffffffff0019169055565b600c5481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006113e78260405180606001604052806024815260200161227b602491396113e0866113db611a3c565b6115f2565b9190611f3c565b90506113fb836113f5611a3c565b83611a40565b6114058383611dc1565b505050565b60055461010090046001600160a01b031690565b610dac81565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109715780601f1061094657610100808354040283529160200191610971565b60115460ff1681565b69048d8470181e3270000081565b6000610ac76114a9611a3c565b846110448560405180606001604052806025815260200161232d60259139600160006114d3611a3c565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611f3c565b6000610ac7611511611a3c565b8484611fd3565b600f5481565b600e546001600160a01b03163314611566576040805162461bcd60e51b8152602060048083019190915260248201526310b232bb60e11b604482015290519081900360640190fd5b6001600160a01b0381166115c3576040805162461bcd60e51b8152602060048083019190915260248201527f7a65726f00000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600e805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600b546001600160a01b031633146116665760405162461bcd60e51b81526004018080602001828103825260238152602001806121e26023913960400191505060405180910390fd5b610dac8111156116bd576040805162461bcd60e51b815260206004820152601d60248201527f4572726f723a204d61782074617820726174652065786365656465642e000000604482015290519081900360640190fd5b600955565b60085460ff1681565b6116d3611a3c565b6001600160a01b03166116e461140a565b6001600160a01b03161461173f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166117845760405162461bcd60e51b81526004018080602001828103825260268152602001806121746026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b600e546001600160a01b03163314611840576040805162461bcd60e51b8152602060048083019190915260248201526310b232bb60e11b604482015290519081900360640190fd5b600d805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60076020526000908152604090205460ff1681565b60008082116118da576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816118e357fe5b049392505050565b600082820183811015611945576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166119a7576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6119b360008383611405565b6002546119c090826118eb565b6002556001600160a01b0382166000908152602081905260409020546119e690826118eb565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b3390565b6001600160a01b038316611a855760405162461bcd60e51b81526004018080602001828103825260248152602001806123096024913960400191505060405180910390fd5b6001600160a01b038216611aca5760405162461bcd60e51b815260040180806020018281038252602281526020018061219a6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600082821115611b83576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082611b9857506000610acb565b82820282848281611ba557fe5b04146119455760405162461bcd60e51b81526004018080602001828103825260218152602001806122326021913960400191505060405180910390fd5b600b54611bfa9083906001600160a01b031683611a40565b600b54611c129083906001600160a01b031683611c95565b50600b54604080517febaf41560000000000000000000000000000000000000000000000000000000081526004810184905290516001600160a01b039092169163ebaf41569160248082019260009290919082900301818387803b158015611c7957600080fd5b505af1158015611c8d573d6000803e3d6000fd5b505050505050565b6000611ca2848484611fd3565b611d0d84611cae611a3c565b61104485604051806060016040528060288152602001612253602891396001600160a01b038a16600090815260016020526040812090611cec611a3c565b6001600160a01b031681526020810191909152604001600020549190611f3c565b5060019392505050565b6001600160a01b038116611d5c5760405162461bcd60e51b815260040180806020018281038252602d815260200180612205602d913960400191505060405180910390fd5b6040516001600160a01b038216906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a36006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b038216611e065760405162461bcd60e51b81526004018080602001828103825260218152602001806122c36021913960400191505060405180910390fd5b611e1282600083611405565b611e4f81604051806060016040528060228152602001612152602291396001600160a01b0385166000908152602081905260409020549190611f3c565b6001600160a01b038316600090815260208190526040902055600254611e759082611b2c565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663d27428136040518163ffffffff1660e01b815260040160206040518083038186803b158015611f0b57600080fd5b505afa158015611f1f573d6000803e3d6000fd5b505050506040513d6020811015611f3557600080fd5b5051600a55565b60008184841115611fcb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f90578181015183820152602001611f78565b50505050905090810190601f168015611fbd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166120185760405162461bcd60e51b81526004018080602001828103825260258152602001806122e46025913960400191505060405180910390fd5b6001600160a01b03821661205d5760405162461bcd60e51b815260040180806020018281038252602381526020018061212f6023913960400191505060405180910390fd5b612068838383611405565b6120a5816040518060600160405280602681526020016121bc602691396001600160a01b0386166000908152602081905260409020549190611f3c565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546120d490826118eb565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654572726f723a2043616c6c6572206973206e6f742074686520746178206f66666963656f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63656f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f7245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205a9521166a91eb398fa92989e8e56af6bf3d0ba43cabf723b83730892a82e9f664736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "claimRewards()": {
        "details": "Claim pending rewards to community and dev fund"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "distributeReward(address)": {
        "notice": "distribute to reward pool (only once)"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 554,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 560,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 562,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 564,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 566,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 568,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "_decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 7,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "_owner",
        "offset": 1,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 13705,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "_operator",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 15561,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "whitelistType",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_enum(WhitelistType)15557)"
      },
      {
        "astId": 15563,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "enableDynamicTax",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 15571,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "staticTaxRate",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 15573,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "dynamicTaxRate",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 15575,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "taxOffice",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 15577,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "taxRate",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 2588,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "communityFund",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 2590,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "devFund",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 2592,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "communityFundLastClaimed",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 2594,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "devFundLastClaimed",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 2597,
        "contract": "contracts/Glcr.sol:Glcr",
        "label": "rewardPoolDistributed",
        "offset": 0,
        "slot": "17",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(WhitelistType)15557": {
        "encoding": "inplace",
        "label": "enum ERC20Taxable.WhitelistType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_enum(WhitelistType)15557)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum ERC20Taxable.WhitelistType)",
        "numberOfBytes": "32",
        "value": "t_enum(WhitelistType)15557"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}