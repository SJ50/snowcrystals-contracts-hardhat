{
  "address": "0x9C85258d9A00C01d00ded98065ea3840dF06f09c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOperator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "OperatorTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DENOM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIAL_DAO_WALLET_DISTRIBUTION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIAL_GENESIS_POOL_DISTRIBUTION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TAX_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_genesisPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_daoWallet",
          "type": "address"
        }
      ],
      "name": "distributeReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dynamicTaxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableDynamicTax",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTaxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "governanceRecoverUnsupported",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isWhitelistedRecipient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isWhitelistedSender",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPoolDistributed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enableDynamicTax",
          "type": "bool"
        }
      ],
      "name": "setEnableDynamicTax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taxRate",
          "type": "uint256"
        }
      ],
      "name": "setStaticTaxRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_taxOffice",
          "type": "address"
        }
      ],
      "name": "setTaxOffice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "setWhitelistType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staticTaxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxOffice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBurned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "successFlag",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOperator_",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistType",
      "outputs": [
        {
          "internalType": "enum ERC20Taxable.WhitelistType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x88b8c1b65c457cc8a384a71e339a93f773dbbb6e1cf5e4b345b0c75a41eed58f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9C85258d9A00C01d00ded98065ea3840dF06f09c",
    "transactionIndex": 0,
    "gasUsed": "1993317",
    "logsBloom": "0x
    "blockHash": "0xdcb4472daba03cdf5a838162794be0eca834d0a9d204a876d91bbe0e017b8d5b",
    "transactionHash": "0x88b8c1b65c457cc8a384a71e339a93f773dbbb6e1cf5e4b345b0c75a41eed58f",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 5259798,
        "transactionHash": "0x88b8c1b65c457cc8a384a71e339a93f773dbbb6e1cf5e4b345b0c75a41eed58f",
        "address": "0x9C85258d9A00C01d00ded98065ea3840dF06f09c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xdcb4472daba03cdf5a838162794be0eca834d0a9d204a876d91bbe0e017b8d5b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 5259798,
        "transactionHash": "0x88b8c1b65c457cc8a384a71e339a93f773dbbb6e1cf5e4b345b0c75a41eed58f",
        "address": "0x9C85258d9A00C01d00ded98065ea3840dF06f09c",
        "topics": [
          "0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xdcb4472daba03cdf5a838162794be0eca834d0a9d204a876d91bbe0e017b8d5b"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 5259798,
        "transactionHash": "0x88b8c1b65c457cc8a384a71e339a93f773dbbb6e1cf5e4b345b0c75a41eed58f",
        "address": "0x9C85258d9A00C01d00ded98065ea3840dF06f09c",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x00000000000000000000000000000000000000000000003635c9adc5dea00000",
        "logIndex": 2,
        "blockHash": "0xdcb4472daba03cdf5a838162794be0eca834d0a9d204a876d91bbe0e017b8d5b"
      }
    ],
    "blockNumber": 5259798,
    "cumulativeGasUsed": "1993317",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "snowcrystals.finance",
    "SNOW"
  ],
  "numDeployments": 1,
  "solcInputHash": "3c54a3c65be41d63bdc08efffa70f585",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DENOM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_DAO_WALLET_DISTRIBUTION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_GENESIS_POOL_DISTRIBUTION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TAX_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_genesisPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_daoWallet\",\"type\":\"address\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dynamicTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableDynamicTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isWhitelistedRecipient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isWhitelistedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPoolDistributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enableDynamicTax\",\"type\":\"bool\"}],\"name\":\"setEnableDynamicTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxRate\",\"type\":\"uint256\"}],\"name\":\"setStaticTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taxOffice\",\"type\":\"address\"}],\"name\":\"setTaxOffice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"setWhitelistType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staticTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxOffice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"successFlag\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistType\",\"outputs\":[{\"internalType\":\"enum ERC20Taxable.WhitelistType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":\"Constructs the SNOW ERC-20 contract.\"},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Snow.sol\":\"Snow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    using SafeMath for uint256;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n\\n        _approve(account, _msgSender(), decreasedAllowance);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x9c0eb3b0e11d2480d49991dc384f1e5f9c9b9967cc81944d50916a9b9c6c4984\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/Snow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./utils/ERC20Taxable.sol\\\";\\n\\n/* \\n    https://snowcrystals.finance\\n*/\\n\\ncontract Snow is ERC20Taxable {\\n    using SafeMath for uint256;\\n\\n    // Initial distribution for the first 48h genesis pools\\n    uint256 public constant INITIAL_GENESIS_POOL_DISTRIBUTION = 24_000 ether;\\n    // Distribution for airdrops wallet\\n    uint256 public constant INITIAL_DAO_WALLET_DISTRIBUTION = 1_000 ether;\\n\\n    // Have the rewards been distributed to the pools\\n    bool public rewardPoolDistributed = false;\\n\\n    uint256 public totalBurned;\\n\\n    /**\\n     * @notice Constructs the SNOW ERC-20 contract.\\n     */\\n    constructor(string memory name_, string memory symbol_)\\n        public\\n        ERC20Taxable(name_, symbol_)\\n    {\\n        // Mints 1_000 SNOW to contract creator for initial pool setup.\\n        _mint(msg.sender, 1_000 ether);\\n    }\\n\\n    //* ========== EVENTS ========== *//\\n\\n    event TokenBurned(address indexed account, uint256 amount);\\n\\n    //*================ BASIC TOKEN FUNCTIONS ================*//\\n    function mint(address recipient_, uint256 amount_)\\n        public\\n        onlyOperator\\n        returns (bool)\\n    {\\n        uint256 balanceBefore = balanceOf(recipient_);\\n        _mint(recipient_, amount_);\\n        uint256 balanceAfter = balanceOf(recipient_);\\n        return balanceAfter > balanceBefore;\\n    }\\n\\n    function burn(uint256 amount) public override {\\n        super.burn(amount);\\n    }\\n\\n    function burnFrom(address account, uint256 amount)\\n        public\\n        override\\n        onlyOperator\\n    {\\n        super.burnFrom(account, amount);\\n    }\\n\\n    //* ========== OVERRIDE STANDARD FUNCTIONS ========== *//\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `_account` cannot be the zero address.\\n     * - `_account` must have at least `_amount` tokens.\\n     */\\n    function _burn(address _account, uint256 _amount) internal override {\\n        super._burn(_account, _amount);\\n        totalBurned = totalBurned.add(_amount);\\n        emit TokenBurned(_account, _amount);\\n    }\\n\\n    //*================ TOKEN DISTRIBUTION / RECOVERY ================*//\\n    function distributeReward(address _genesisPool, address _daoWallet)\\n        external\\n        onlyOperator\\n    {\\n        require(!rewardPoolDistributed, \\\"Error: can only distribute once\\\");\\n        require(_genesisPool != address(0), \\\"!_genesisPool\\\");\\n        require(_daoWallet != address(0), \\\"!_daoWallet\\\");\\n\\n        rewardPoolDistributed = true; //State change before minting additional tokens.\\n\\n        _mint(_genesisPool, INITIAL_GENESIS_POOL_DISTRIBUTION);\\n        _mint(_daoWallet, INITIAL_DAO_WALLET_DISTRIBUTION);\\n    }\\n\\n    //*================ TAX FUNCTIONS ================*//\\n\\n    function _updateDynamicTaxRate() internal override {\\n        dynamicTaxRate = ITaxOffice(taxOffice).calculateMainTokenTax();\\n    }\\n\\n    function _handleTax(address _sender, uint256 _amount) internal override {\\n        _approve(_sender, taxOffice, _amount);\\n        //Use inherited function to transferFrom.\\n        ERC20.transferFrom(_sender, taxOffice, _amount);\\n        ITaxOffice(taxOffice).handleMainTokenTax(_amount);\\n    }\\n}\\n\",\"keccak256\":\"0xbf068756262cabf0d212aef6b1066ab16e82b5c5bedec0253d8e18598ce6cddd\",\"license\":\"MIT\"},\"contracts/access/Operator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract Operator is Context, Ownable {\\n    address private _operator;\\n\\n    event OperatorTransferred(\\n        address indexed previousOperator,\\n        address indexed newOperator\\n    );\\n\\n    constructor() internal {\\n        _operator = _msgSender();\\n        emit OperatorTransferred(address(0), _operator);\\n    }\\n\\n    function operator() public view returns (address) {\\n        return _operator;\\n    }\\n\\n    modifier onlyOperator() {\\n        require(\\n            _operator == msg.sender,\\n            \\\"operator: caller is not the operator\\\"\\n        );\\n        _;\\n    }\\n\\n    function isOperator() public view returns (bool) {\\n        return _msgSender() == _operator;\\n    }\\n\\n    function transferOperator(address newOperator_) public onlyOwner {\\n        _transferOperator(newOperator_);\\n    }\\n\\n    function _transferOperator(address newOperator_) internal {\\n        require(\\n            newOperator_ != address(0),\\n            \\\"operator: zero address given for new operator\\\"\\n        );\\n        emit OperatorTransferred(address(0), newOperator_);\\n        _operator = newOperator_;\\n    }\\n}\\n\",\"keccak256\":\"0xb5055492468980c849d82c7f7a2de99c566b3b028f45112bffc0a1c8c697d831\",\"license\":\"MIT\"},\"contracts/interfaces/ITaxOffice.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface ITaxOffice {\\n    function setMainTokenOracle(address _mainTokenOracle) external;\\n\\n    function setMainTokenTaxTiers(\\n        uint256[] calldata _mainTokenTaxTwapTiers,\\n        uint256[] calldata _mainTokenTaxRateTiers\\n    ) external;\\n\\n    function setShareTokenTaxTiers(\\n        uint256[] calldata _shareTokenTaxTwapTiers,\\n        uint256[] calldata _shareTokenTaxRateTiers\\n    ) external;\\n\\n    function calculateMainTokenTax() external view returns (uint256 taxRate);\\n\\n    function calculateShareTokenTax() external view returns (uint256 taxRate);\\n\\n    function handleMainTokenTax(uint256 _amount) external;\\n\\n    function handleShareTokenTax(uint256 _amount) external;\\n\\n    function taxDiscount(address _sender, address _recipient)\\n        external\\n        returns (uint256);\\n\\n    function updateMainTokenPrice() external;\\n\\n    function sendToBonus(\\n        uint256 _price,\\n        uint256 _ceilingPrice,\\n        uint256 _nextEpochPoint\\n    ) external;\\n}\\n\",\"keccak256\":\"0x9dd8a1d2c9daf5b7e9fb8063a4bf40c2728b238586a330357da4e0739655094b\",\"license\":\"MIT\"},\"contracts/utils/ERC20Taxable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\nimport \\\"../access/Operator.sol\\\";\\nimport \\\"../interfaces/ITaxOffice.sol\\\";\\n\\ncontract ERC20Taxable is ERC20, ERC20Burnable, Operator {\\n    using SafeMath for uint256;\\n\\n    enum WhitelistType {\\n        NONE,\\n        SENDER,\\n        RECIPIENT,\\n        BOTH\\n    }\\n\\n    mapping(address => WhitelistType) public whitelistType;\\n\\n    bool public enableDynamicTax;\\n    uint256 public constant BASIS_POINTS_DENOM = 10_000;\\n    uint256 public constant MAX_TAX_RATE = 3_500;\\n    uint256 public staticTaxRate;\\n    uint256 public dynamicTaxRate;\\n\\n    address public taxOffice;\\n    uint256 public taxRate;\\n\\n    constructor(string memory _name, string memory _symbol)\\n        public\\n        ERC20(_name, _symbol)\\n    {}\\n\\n    modifier onlyTaxOffice() {\\n        require(taxOffice == msg.sender, \\\"Error: Caller is not the tax office\\\");\\n        _;\\n    }\\n\\n    function setTaxOffice(address _taxOffice) external onlyOperator {\\n        taxOffice = _taxOffice;\\n    }\\n\\n    function setStaticTaxRate(uint256 _taxRate) external onlyTaxOffice {\\n        require(_taxRate <= MAX_TAX_RATE, \\\"Error: Max tax rate exceeded.\\\");\\n        staticTaxRate = _taxRate;\\n    }\\n\\n    function setEnableDynamicTax(bool _enableDynamicTax)\\n        external\\n        onlyTaxOffice\\n    {\\n        enableDynamicTax = _enableDynamicTax;\\n    }\\n\\n    function setWhitelistType(address _account, uint8 _type)\\n        external\\n        onlyTaxOffice\\n    {\\n        whitelistType[_account] = WhitelistType(_type);\\n    }\\n\\n    function isWhitelistedSender(address _account)\\n        public\\n        view\\n        returns (bool isWhitelisted)\\n    {\\n        isWhitelisted =\\n            whitelistType[_account] == WhitelistType.SENDER ||\\n            whitelistType[_account] == WhitelistType.BOTH;\\n    }\\n\\n    function isWhitelistedRecipient(address _account)\\n        public\\n        view\\n        returns (bool isWhitelisted)\\n    {\\n        isWhitelisted =\\n            whitelistType[_account] == WhitelistType.RECIPIENT ||\\n            whitelistType[_account] == WhitelistType.BOTH;\\n    }\\n\\n    function getCurrentTaxRate() public returns (uint256) {\\n        taxRate = staticTaxRate;\\n        if (enableDynamicTax == true) {\\n            _updateDynamicTaxRate();\\n            if (dynamicTaxRate > MAX_TAX_RATE) {\\n                dynamicTaxRate = MAX_TAX_RATE;\\n            }\\n            taxRate = dynamicTaxRate;\\n        }\\n        return taxRate;\\n    }\\n\\n    function transferFrom(\\n        address _sender,\\n        address _recipient,\\n        uint256 _amount\\n    ) public override returns (bool successFlag) {\\n        //If neither the sender or recipient are whitelisted then apply tax.\\n        if (\\n            !isWhitelistedSender(_sender) && !isWhitelistedRecipient(_recipient)\\n        ) {\\n            //Calculate tax amount and then handle tax.\\n            uint256 _taxRate = getCurrentTaxRate();\\n            if (_taxRate > 0) {\\n                uint256 taxDiscount = BASIS_POINTS_DENOM.sub(\\n                    ITaxOffice(taxOffice).taxDiscount(_sender, _recipient)\\n                );\\n\\n                _taxRate = _taxRate.mul(taxDiscount).div(BASIS_POINTS_DENOM);\\n                uint256 taxableAmount = _amount.mul(_taxRate).div(\\n                    BASIS_POINTS_DENOM\\n                );\\n                _amount = _amount.sub(taxableAmount);\\n                _handleTax(_sender, taxableAmount);\\n            }\\n        }\\n\\n        //Use inherited function to transferFrom.\\n        successFlag = ERC20.transferFrom(_sender, _recipient, _amount);\\n    }\\n\\n    //Overrideable functions for the inheriting contract to dictate tax rates.\\n    function _updateDynamicTaxRate() internal virtual {}\\n\\n    function _handleTax(address _sender, uint256 _amount) internal virtual {}\\n\\n    function governanceRecoverUnsupported(\\n        IERC20 _token,\\n        uint256 _amount,\\n        address _to\\n    ) external onlyOperator {\\n        _token.transfer(_to, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xd661198c0bcbbe6abcb234feace3ce8ba87a14f3249c0beed1ff4b7afde84cb7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600d805460ff191690553480156200001b57600080fd5b506040516200251638038062002516833981810160405260408110156200004157600080fd5b81019080805160405193929190846401000000008211156200006257600080fd5b9083019060208201858111156200007857600080fd5b82516401000000008111828201881017156200009357600080fd5b82525081516020918201929091019080838360005b83811015620000c2578181015183820152602001620000a8565b50505050905090810190601f168015620000f05780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011457600080fd5b9083019060208201858111156200012a57600080fd5b82516401000000008111828201881017156200014557600080fd5b82525081516020918201929091019080838360005b83811015620001745781810151838201526020016200015a565b50505050905090810190601f168015620001a25780820380516001836020036101000a031916815260200191505b50604052505050818181818160039080519060200190620001c59291906200043d565b508051620001db9060049060208401906200043d565b50506005805460ff19166012179055506000620001f7620002c3565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000257620002c3565b600680546001600160a01b0319166001600160a01b0392831617908190556040519116906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a350620002bb905033683635c9adc5dea00000620002c7565b5050620004d9565b3390565b6001600160a01b03821662000323576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200033160008383620003d6565b6200034d81600254620003db60201b620014621790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200038091839062001462620003db821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b60008282018381101562000436576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200048057805160ff1916838001178555620004b0565b82800160010185558215620004b0579182015b82811115620004b057825182559160200191906001019062000493565b50620004be929150620004c2565b5090565b5b80821115620004be5760008155600101620004c3565b61202d80620004e96000396000f3fe608060405234801561001057600080fd5b50600436106102d35760003560e01c8063570ca7351161018657806395d89b41116100e3578063dd62ed3e11610097578063f2fde38b11610071578063f2fde38b1461072f578063f4fd47cf14610755578063fe46be4414610783576102d3565b8063dd62ed3e146106dc578063e1ea1fa31461070a578063f1b15c9414610727576102d3565b8063a457c2d7116100c8578063a457c2d71461067c578063a9059cbb146106a8578063d89135cd146106d4576102d3565b806395d89b411461066c5780639662676c14610674576102d3565b8063715018a61161013a57806379cc67901161011f57806379cc6790146106305780638da5cb5b1461065c5780638fa8173214610664576102d3565b8063715018a614610620578063771a3a1d14610628576102d3565b806364f53f2e1161016b57806364f53f2e146105ea578063678014b0146105f257806370a08231146105fa576102d3565b8063570ca735146105da57806361482bed146105e2576102d3565b806339509351116102345780634456eda2116101e85780634e20a02c116101cd5780634e20a02c146105945780635024ec1f1461059c57806354575af4146105a4576102d3565b80634456eda214610566578063483846401461056e576102d3565b80633f07d76a116102195780633f07d76a146104f757806340c10f191461051d57806342966c6814610549576102d3565b806339509351146104a75780633e5f13d4146104d3576102d3565b806323b872dd1161028b578063313ce56711610270578063313ce56714610462578063323440d11461048057806338d2776e14610488576102d3565b806323b872dd1461040657806329605e771461043c576102d3565b806318160ddd116102bc57806318160ddd146103955780631b9e2fad146103af578063232798df146103d5576102d3565b806306fdde03146102d8578063095ea7b314610355575b600080fd5b6102e06107ca565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561031a578181015183820152602001610302565b50505050905090810190601f1680156103475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103816004803603604081101561036b57600080fd5b506001600160a01b038135169060200135610860565b604080519115158252519081900360200190f35b61039d61087e565b60408051918252519081900360200190f35b610381600480360360208110156103c557600080fd5b50356001600160a01b0316610884565b610404600480360360408110156103eb57600080fd5b5080356001600160a01b0316906020013560ff166108e7565b005b6103816004803603606081101561041c57600080fd5b506001600160a01b03813581169160208101359091169060400135610974565b6104046004803603602081101561045257600080fd5b50356001600160a01b0316610aad565b61046a610b2d565b6040805160ff9092168252519081900360200190f35b61039d610b36565b6104046004803603602081101561049e57600080fd5b50351515610b43565b610381600480360360408110156104bd57600080fd5b506001600160a01b038135169060200135610b9f565b6104db610bf2565b604080516001600160a01b039092168252519081900360200190f35b6104046004803603602081101561050d57600080fd5b50356001600160a01b0316610c01565b6103816004803603604081101561053357600080fd5b506001600160a01b038135169060200135610c79565b6104046004803603602081101561055f57600080fd5b5035610cf3565b610381610cfc565b6103816004803603602081101561058457600080fd5b50356001600160a01b0316610d22565b61039d610d2b565b61039d610d39565b610404600480360360608110156105ba57600080fd5b506001600160a01b03813581169160208101359160409091013516610d3f565b6104db610e10565b61039d610e1f565b61039d610e25565b61039d610e67565b61039d6004803603602081101561061057600080fd5b50356001600160a01b0316610e6d565b610404610e88565b61039d610f59565b6104046004803603604081101561064657600080fd5b506001600160a01b038135169060200135610f5f565b6104db610fb6565b61039d610fca565b6102e0610fd0565b610381611031565b6103816004803603604081101561069257600080fd5b506001600160a01b03813516906020013561103a565b610381600480360360408110156106be57600080fd5b506001600160a01b0381351690602001356110a2565b61039d6110b6565b61039d600480360360408110156106f257600080fd5b506001600160a01b03813581169160200135166110bc565b6104046004803603602081101561072057600080fd5b50356110e7565b61038161118c565b6104046004803603602081101561074557600080fd5b50356001600160a01b0316611195565b6104046004803603604081101561076b57600080fd5b506001600160a01b03813581169160200135166112c2565b6107a96004803603602081101561079957600080fd5b50356001600160a01b031661144d565b604051808260038111156107b957fe5b815260200191505060405180910390f35b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108565780601f1061082b57610100808354040283529160200191610856565b820191906000526020600020905b81548152906001019060200180831161083957829003601f168201915b5050505050905090565b600061087461086d6114c3565b84846114c7565b5060015b92915050565b60025490565b600060015b6001600160a01b03831660009081526007602052604090205460ff1660038111156108b057fe5b1480610878575060036001600160a01b03831660009081526007602052604090205460ff1660038111156108e057fe5b1492915050565b600b546001600160a01b031633146109305760405162461bcd60e51b8152600401808060200182810382526023815260200180611e886023913960400191505060405180910390fd5b8060ff16600381111561093f57fe5b6001600160a01b0383166000908152600760205260409020805460ff1916600183600381111561096b57fe5b02179055505050565b600061097f84610884565b158015610992575061099083610d22565b155b15610a9a5760006109a1610e25565b90508015610a9857600b54604080517f5803abaa0000000000000000000000000000000000000000000000000000000081526001600160a01b03888116600483015287811660248301529151600093610a51931691635803abaa91604480830192602092919082900301818887803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b505050506040513d6020811015610a4657600080fd5b5051612710906115b3565b9050610a69612710610a638484611610565b90611669565b91506000610a7d612710610a638786611610565b9050610a8985826115b3565b9450610a9587826116d0565b50505b505b610aa5848484611783565b949350505050565b610ab56114c3565b6001600160a01b0316610ac6610fb6565b6001600160a01b031614610b21576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610b2a81611805565b50565b60055460ff1690565b683635c9adc5dea0000081565b600b546001600160a01b03163314610b8c5760405162461bcd60e51b8152600401808060200182810382526023815260200180611e886023913960400191505060405180910390fd5b6008805460ff1916911515919091179055565b6000610874610bac6114c3565b84610bed8560016000610bbd6114c3565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611462565b6114c7565b600b546001600160a01b031681565b6006546001600160a01b03163314610c4a5760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6006546000906001600160a01b03163314610cc55760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b6000610cd084610e6d565b9050610cdc84846118af565b6000610ce785610e6d565b91909111949350505050565b610b2a8161199f565b6006546000906001600160a01b0316610d136114c3565b6001600160a01b031614905090565b60006002610889565b6905150ae84a8cdf00000081565b60095481565b6006546001600160a01b03163314610d885760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b826001600160a01b031663a9059cbb82846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610ddf57600080fd5b505af1158015610df3573d6000803e3d6000fd5b505050506040513d6020811015610e0957600080fd5b5050505050565b6006546001600160a01b031690565b600a5481565b600954600c5560085460009060ff16151560011415610e6057610e466119b0565b610dac600a541115610e5957610dac600a555b600a54600c555b50600c5490565b61271081565b6001600160a01b031660009081526020819052604090205490565b610e906114c3565b6001600160a01b0316610ea1610fb6565b6001600160a01b031614610efc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805474ffffffffffffffffffffffffffffffffffffffff0019169055565b600c5481565b6006546001600160a01b03163314610fa85760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b610fb28282611a2f565b5050565b60055461010090046001600160a01b031690565b610dac81565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108565780601f1061082b57610100808354040283529160200191610856565b600d5460ff1681565b60006108746110476114c3565b84610bed85604051806060016040528060258152602001611fd360259139600160006110716114c3565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611a89565b60006108746110af6114c3565b8484611b20565b600e5481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600b546001600160a01b031633146111305760405162461bcd60e51b8152600401808060200182810382526023815260200180611e886023913960400191505060405180910390fd5b610dac811115611187576040805162461bcd60e51b815260206004820152601d60248201527f4572726f723a204d61782074617820726174652065786365656465642e000000604482015290519081900360640190fd5b600955565b60085460ff1681565b61119d6114c3565b6001600160a01b03166111ae610fb6565b6001600160a01b031614611209576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661124e5760405162461bcd60e51b8152600401808060200182810382526026815260200180611e1a6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b6006546001600160a01b0316331461130b5760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b600d5460ff1615611363576040805162461bcd60e51b815260206004820152601f60248201527f4572726f723a2063616e206f6e6c792064697374726962757465206f6e636500604482015290519081900360640190fd5b6001600160a01b0382166113be576040805162461bcd60e51b815260206004820152600d60248201527f215f67656e65736973506f6f6c00000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116611419576040805162461bcd60e51b815260206004820152600b60248201527f215f64616f57616c6c6574000000000000000000000000000000000000000000604482015290519081900360640190fd5b600d805460ff1916600117905561143a826905150ae84a8cdf0000006118af565b610fb281683635c9adc5dea000006118af565b60076020526000908152604090205460ff1681565b6000828201838110156114bc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b03831661150c5760405162461bcd60e51b8152600401808060200182810382526024815260200180611faf6024913960400191505060405180910390fd5b6001600160a01b0382166115515760405162461bcd60e51b8152600401808060200182810382526022815260200180611e406022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008282111561160a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008261161f57506000610878565b8282028284828161162c57fe5b04146114bc5760405162461bcd60e51b8152600401808060200182810382526021815260200180611ed86021913960400191505060405180910390fd5b60008082116116bf576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816116c857fe5b049392505050565b600b546116e89083906001600160a01b0316836114c7565b600b546117009083906001600160a01b031683611783565b50600b54604080517fbfc770a80000000000000000000000000000000000000000000000000000000081526004810184905290516001600160a01b039092169163bfc770a89160248082019260009290919082900301818387803b15801561176757600080fd5b505af115801561177b573d6000803e3d6000fd5b505050505050565b6000611790848484611b20565b6117fb8461179c6114c3565b610bed85604051806060016040528060288152602001611ef9602891396001600160a01b038a166000908152600160205260408120906117da6114c3565b6001600160a01b031681526020810191909152604001600020549190611a89565b5060019392505050565b6001600160a01b03811661184a5760405162461bcd60e51b815260040180806020018281038252602d815260200180611eab602d913960400191505060405180910390fd5b6040516001600160a01b038216906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a36006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03821661190a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61191660008383611a84565b6002546119239082611462565b6002556001600160a01b0382166000908152602081905260409020546119499082611462565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610b2a6119aa6114c3565b82611c7b565b600b60009054906101000a90046001600160a01b03166001600160a01b031663d39abead6040518163ffffffff1660e01b815260040160206040518083038186803b1580156119fe57600080fd5b505afa158015611a12573d6000803e3d6000fd5b505050506040513d6020811015611a2857600080fd5b5051600a55565b6000611a6682604051806060016040528060248152602001611f2160249139611a5f86611a5a6114c3565b6110bc565b9190611a89565b9050611a7a83611a746114c3565b836114c7565b611a848383611c7b565b505050565b60008184841115611b185760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611add578181015183820152602001611ac5565b50505050905090810190601f168015611b0a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038316611b655760405162461bcd60e51b8152600401808060200182810382526025815260200180611f8a6025913960400191505060405180910390fd5b6001600160a01b038216611baa5760405162461bcd60e51b8152600401808060200182810382526023815260200180611dd56023913960400191505060405180910390fd5b611bb5838383611a84565b611bf281604051806060016040528060268152602001611e62602691396001600160a01b0386166000908152602081905260409020549190611a89565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611c219082611462565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b611c858282611cd8565b600e54611c929082611462565b600e556040805182815290516001600160a01b038416917f1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa2919081900360200190a25050565b6001600160a01b038216611d1d5760405162461bcd60e51b8152600401808060200182810382526021815260200180611f696021913960400191505060405180910390fd5b611d2982600083611a84565b611d6681604051806060016040528060228152602001611df8602291396001600160a01b0385166000908152602081905260409020549190611a89565b6001600160a01b038316600090815260208190526040902055600254611d8c90826115b3565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654572726f723a2043616c6c6572206973206e6f742074686520746178206f66666963656f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63656f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f7245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220458e7a72a15d3459227200b9e2b0574ffd68dcc2ff0a198b86adc3aba3df980d64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102d35760003560e01c8063570ca7351161018657806395d89b41116100e3578063dd62ed3e11610097578063f2fde38b11610071578063f2fde38b1461072f578063f4fd47cf14610755578063fe46be4414610783576102d3565b8063dd62ed3e146106dc578063e1ea1fa31461070a578063f1b15c9414610727576102d3565b8063a457c2d7116100c8578063a457c2d71461067c578063a9059cbb146106a8578063d89135cd146106d4576102d3565b806395d89b411461066c5780639662676c14610674576102d3565b8063715018a61161013a57806379cc67901161011f57806379cc6790146106305780638da5cb5b1461065c5780638fa8173214610664576102d3565b8063715018a614610620578063771a3a1d14610628576102d3565b806364f53f2e1161016b57806364f53f2e146105ea578063678014b0146105f257806370a08231146105fa576102d3565b8063570ca735146105da57806361482bed146105e2576102d3565b806339509351116102345780634456eda2116101e85780634e20a02c116101cd5780634e20a02c146105945780635024ec1f1461059c57806354575af4146105a4576102d3565b80634456eda214610566578063483846401461056e576102d3565b80633f07d76a116102195780633f07d76a146104f757806340c10f191461051d57806342966c6814610549576102d3565b806339509351146104a75780633e5f13d4146104d3576102d3565b806323b872dd1161028b578063313ce56711610270578063313ce56714610462578063323440d11461048057806338d2776e14610488576102d3565b806323b872dd1461040657806329605e771461043c576102d3565b806318160ddd116102bc57806318160ddd146103955780631b9e2fad146103af578063232798df146103d5576102d3565b806306fdde03146102d8578063095ea7b314610355575b600080fd5b6102e06107ca565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561031a578181015183820152602001610302565b50505050905090810190601f1680156103475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103816004803603604081101561036b57600080fd5b506001600160a01b038135169060200135610860565b604080519115158252519081900360200190f35b61039d61087e565b60408051918252519081900360200190f35b610381600480360360208110156103c557600080fd5b50356001600160a01b0316610884565b610404600480360360408110156103eb57600080fd5b5080356001600160a01b0316906020013560ff166108e7565b005b6103816004803603606081101561041c57600080fd5b506001600160a01b03813581169160208101359091169060400135610974565b6104046004803603602081101561045257600080fd5b50356001600160a01b0316610aad565b61046a610b2d565b6040805160ff9092168252519081900360200190f35b61039d610b36565b6104046004803603602081101561049e57600080fd5b50351515610b43565b610381600480360360408110156104bd57600080fd5b506001600160a01b038135169060200135610b9f565b6104db610bf2565b604080516001600160a01b039092168252519081900360200190f35b6104046004803603602081101561050d57600080fd5b50356001600160a01b0316610c01565b6103816004803603604081101561053357600080fd5b506001600160a01b038135169060200135610c79565b6104046004803603602081101561055f57600080fd5b5035610cf3565b610381610cfc565b6103816004803603602081101561058457600080fd5b50356001600160a01b0316610d22565b61039d610d2b565b61039d610d39565b610404600480360360608110156105ba57600080fd5b506001600160a01b03813581169160208101359160409091013516610d3f565b6104db610e10565b61039d610e1f565b61039d610e25565b61039d610e67565b61039d6004803603602081101561061057600080fd5b50356001600160a01b0316610e6d565b610404610e88565b61039d610f59565b6104046004803603604081101561064657600080fd5b506001600160a01b038135169060200135610f5f565b6104db610fb6565b61039d610fca565b6102e0610fd0565b610381611031565b6103816004803603604081101561069257600080fd5b506001600160a01b03813516906020013561103a565b610381600480360360408110156106be57600080fd5b506001600160a01b0381351690602001356110a2565b61039d6110b6565b61039d600480360360408110156106f257600080fd5b506001600160a01b03813581169160200135166110bc565b6104046004803603602081101561072057600080fd5b50356110e7565b61038161118c565b6104046004803603602081101561074557600080fd5b50356001600160a01b0316611195565b6104046004803603604081101561076b57600080fd5b506001600160a01b03813581169160200135166112c2565b6107a96004803603602081101561079957600080fd5b50356001600160a01b031661144d565b604051808260038111156107b957fe5b815260200191505060405180910390f35b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108565780601f1061082b57610100808354040283529160200191610856565b820191906000526020600020905b81548152906001019060200180831161083957829003601f168201915b5050505050905090565b600061087461086d6114c3565b84846114c7565b5060015b92915050565b60025490565b600060015b6001600160a01b03831660009081526007602052604090205460ff1660038111156108b057fe5b1480610878575060036001600160a01b03831660009081526007602052604090205460ff1660038111156108e057fe5b1492915050565b600b546001600160a01b031633146109305760405162461bcd60e51b8152600401808060200182810382526023815260200180611e886023913960400191505060405180910390fd5b8060ff16600381111561093f57fe5b6001600160a01b0383166000908152600760205260409020805460ff1916600183600381111561096b57fe5b02179055505050565b600061097f84610884565b158015610992575061099083610d22565b155b15610a9a5760006109a1610e25565b90508015610a9857600b54604080517f5803abaa0000000000000000000000000000000000000000000000000000000081526001600160a01b03888116600483015287811660248301529151600093610a51931691635803abaa91604480830192602092919082900301818887803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b505050506040513d6020811015610a4657600080fd5b5051612710906115b3565b9050610a69612710610a638484611610565b90611669565b91506000610a7d612710610a638786611610565b9050610a8985826115b3565b9450610a9587826116d0565b50505b505b610aa5848484611783565b949350505050565b610ab56114c3565b6001600160a01b0316610ac6610fb6565b6001600160a01b031614610b21576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610b2a81611805565b50565b60055460ff1690565b683635c9adc5dea0000081565b600b546001600160a01b03163314610b8c5760405162461bcd60e51b8152600401808060200182810382526023815260200180611e886023913960400191505060405180910390fd5b6008805460ff1916911515919091179055565b6000610874610bac6114c3565b84610bed8560016000610bbd6114c3565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611462565b6114c7565b600b546001600160a01b031681565b6006546001600160a01b03163314610c4a5760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6006546000906001600160a01b03163314610cc55760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b6000610cd084610e6d565b9050610cdc84846118af565b6000610ce785610e6d565b91909111949350505050565b610b2a8161199f565b6006546000906001600160a01b0316610d136114c3565b6001600160a01b031614905090565b60006002610889565b6905150ae84a8cdf00000081565b60095481565b6006546001600160a01b03163314610d885760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b826001600160a01b031663a9059cbb82846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610ddf57600080fd5b505af1158015610df3573d6000803e3d6000fd5b505050506040513d6020811015610e0957600080fd5b5050505050565b6006546001600160a01b031690565b600a5481565b600954600c5560085460009060ff16151560011415610e6057610e466119b0565b610dac600a541115610e5957610dac600a555b600a54600c555b50600c5490565b61271081565b6001600160a01b031660009081526020819052604090205490565b610e906114c3565b6001600160a01b0316610ea1610fb6565b6001600160a01b031614610efc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805474ffffffffffffffffffffffffffffffffffffffff0019169055565b600c5481565b6006546001600160a01b03163314610fa85760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b610fb28282611a2f565b5050565b60055461010090046001600160a01b031690565b610dac81565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108565780601f1061082b57610100808354040283529160200191610856565b600d5460ff1681565b60006108746110476114c3565b84610bed85604051806060016040528060258152602001611fd360259139600160006110716114c3565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611a89565b60006108746110af6114c3565b8484611b20565b600e5481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600b546001600160a01b031633146111305760405162461bcd60e51b8152600401808060200182810382526023815260200180611e886023913960400191505060405180910390fd5b610dac811115611187576040805162461bcd60e51b815260206004820152601d60248201527f4572726f723a204d61782074617820726174652065786365656465642e000000604482015290519081900360640190fd5b600955565b60085460ff1681565b61119d6114c3565b6001600160a01b03166111ae610fb6565b6001600160a01b031614611209576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661124e5760405162461bcd60e51b8152600401808060200182810382526026815260200180611e1a6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b6006546001600160a01b0316331461130b5760405162461bcd60e51b8152600401808060200182810382526024815260200180611f456024913960400191505060405180910390fd5b600d5460ff1615611363576040805162461bcd60e51b815260206004820152601f60248201527f4572726f723a2063616e206f6e6c792064697374726962757465206f6e636500604482015290519081900360640190fd5b6001600160a01b0382166113be576040805162461bcd60e51b815260206004820152600d60248201527f215f67656e65736973506f6f6c00000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116611419576040805162461bcd60e51b815260206004820152600b60248201527f215f64616f57616c6c6574000000000000000000000000000000000000000000604482015290519081900360640190fd5b600d805460ff1916600117905561143a826905150ae84a8cdf0000006118af565b610fb281683635c9adc5dea000006118af565b60076020526000908152604090205460ff1681565b6000828201838110156114bc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b03831661150c5760405162461bcd60e51b8152600401808060200182810382526024815260200180611faf6024913960400191505060405180910390fd5b6001600160a01b0382166115515760405162461bcd60e51b8152600401808060200182810382526022815260200180611e406022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008282111561160a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008261161f57506000610878565b8282028284828161162c57fe5b04146114bc5760405162461bcd60e51b8152600401808060200182810382526021815260200180611ed86021913960400191505060405180910390fd5b60008082116116bf576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816116c857fe5b049392505050565b600b546116e89083906001600160a01b0316836114c7565b600b546117009083906001600160a01b031683611783565b50600b54604080517fbfc770a80000000000000000000000000000000000000000000000000000000081526004810184905290516001600160a01b039092169163bfc770a89160248082019260009290919082900301818387803b15801561176757600080fd5b505af115801561177b573d6000803e3d6000fd5b505050505050565b6000611790848484611b20565b6117fb8461179c6114c3565b610bed85604051806060016040528060288152602001611ef9602891396001600160a01b038a166000908152600160205260408120906117da6114c3565b6001600160a01b031681526020810191909152604001600020549190611a89565b5060019392505050565b6001600160a01b03811661184a5760405162461bcd60e51b815260040180806020018281038252602d815260200180611eab602d913960400191505060405180910390fd5b6040516001600160a01b038216906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a36006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03821661190a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61191660008383611a84565b6002546119239082611462565b6002556001600160a01b0382166000908152602081905260409020546119499082611462565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610b2a6119aa6114c3565b82611c7b565b600b60009054906101000a90046001600160a01b03166001600160a01b031663d39abead6040518163ffffffff1660e01b815260040160206040518083038186803b1580156119fe57600080fd5b505afa158015611a12573d6000803e3d6000fd5b505050506040513d6020811015611a2857600080fd5b5051600a55565b6000611a6682604051806060016040528060248152602001611f2160249139611a5f86611a5a6114c3565b6110bc565b9190611a89565b9050611a7a83611a746114c3565b836114c7565b611a848383611c7b565b505050565b60008184841115611b185760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611add578181015183820152602001611ac5565b50505050905090810190601f168015611b0a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038316611b655760405162461bcd60e51b8152600401808060200182810382526025815260200180611f8a6025913960400191505060405180910390fd5b6001600160a01b038216611baa5760405162461bcd60e51b8152600401808060200182810382526023815260200180611dd56023913960400191505060405180910390fd5b611bb5838383611a84565b611bf281604051806060016040528060268152602001611e62602691396001600160a01b0386166000908152602081905260409020549190611a89565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611c219082611462565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b611c858282611cd8565b600e54611c929082611462565b600e556040805182815290516001600160a01b038416917f1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa2919081900360200190a25050565b6001600160a01b038216611d1d5760405162461bcd60e51b8152600401808060200182810382526021815260200180611f696021913960400191505060405180910390fd5b611d2982600083611a84565b611d6681604051806060016040528060228152602001611df8602291396001600160a01b0385166000908152602081905260409020549190611a89565b6001600160a01b038316600090815260208190526040902055600254611d8c90826115b3565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654572726f723a2043616c6c6572206973206e6f742074686520746178206f66666963656f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63656f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f7245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220458e7a72a15d3459227200b9e2b0574ffd68dcc2ff0a198b86adc3aba3df980d64736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": "Constructs the SNOW ERC-20 contract."
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 554,
        "contract": "contracts/Snow.sol:Snow",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 560,
        "contract": "contracts/Snow.sol:Snow",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 562,
        "contract": "contracts/Snow.sol:Snow",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 564,
        "contract": "contracts/Snow.sol:Snow",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 566,
        "contract": "contracts/Snow.sol:Snow",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 568,
        "contract": "contracts/Snow.sol:Snow",
        "label": "_decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 7,
        "contract": "contracts/Snow.sol:Snow",
        "label": "_owner",
        "offset": 1,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 13744,
        "contract": "contracts/Snow.sol:Snow",
        "label": "_operator",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 15600,
        "contract": "contracts/Snow.sol:Snow",
        "label": "whitelistType",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_enum(WhitelistType)15596)"
      },
      {
        "astId": 15602,
        "contract": "contracts/Snow.sol:Snow",
        "label": "enableDynamicTax",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 15610,
        "contract": "contracts/Snow.sol:Snow",
        "label": "staticTaxRate",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 15612,
        "contract": "contracts/Snow.sol:Snow",
        "label": "dynamicTaxRate",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 15614,
        "contract": "contracts/Snow.sol:Snow",
        "label": "taxOffice",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 15616,
        "contract": "contracts/Snow.sol:Snow",
        "label": "taxRate",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 6621,
        "contract": "contracts/Snow.sol:Snow",
        "label": "rewardPoolDistributed",
        "offset": 0,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 6623,
        "contract": "contracts/Snow.sol:Snow",
        "label": "totalBurned",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(WhitelistType)15596": {
        "encoding": "inplace",
        "label": "enum ERC20Taxable.WhitelistType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_enum(WhitelistType)15596)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum ERC20Taxable.WhitelistType)",
        "numberOfBytes": "32",
        "value": "t_enum(WhitelistType)15596"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}