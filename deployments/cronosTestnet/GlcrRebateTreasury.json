{
  "address": "0x7387972a0673C6380F95A62f287EBF3f130B4EAa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_glcr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_glcrOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdc",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Glcr",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GlcrOracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Treasury",
      "outputs": [
        {
          "internalType": "contract ITreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "assets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isAdded",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isLP",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "bond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bondVesting",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buybackAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "claimableGlcr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daoFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daoOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "discount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getBondPremium",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGlcrPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getGlcrReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastBuyback",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "redeemAssetsForBuyback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isAdded",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_multiplier",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLP",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "name": "setAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vestingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_discount",
          "type": "uint256"
        }
      ],
      "name": "setBondParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "setDaoOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_glcr",
          "type": "address"
        }
      ],
      "name": "setGlcr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setGlcrOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalVested",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vesting",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastClaimed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcbf5cc9c6137673214b6f179b4492377230beb1bb9cc8bd63b7a5018022fbf7b",
  "receipt": {
    "to": null,
    "from": "0x4750751212D9266CB03dd381145b10adb058dfA9",
    "contractAddress": "0x7387972a0673C6380F95A62f287EBF3f130B4EAa",
    "transactionIndex": 0,
    "gasUsed": "1862208",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800008000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000801000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000000000000000000000000004000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2b69c9ea64a348b78ea5fa46cc8f9d27e214296fafe9cfe5c057daa7626aea4c",
    "transactionHash": "0xcbf5cc9c6137673214b6f179b4492377230beb1bb9cc8bd63b7a5018022fbf7b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 5848636,
        "transactionHash": "0xcbf5cc9c6137673214b6f179b4492377230beb1bb9cc8bd63b7a5018022fbf7b",
        "address": "0x7387972a0673C6380F95A62f287EBF3f130B4EAa",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004750751212d9266cb03dd381145b10adb058dfa9"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2b69c9ea64a348b78ea5fa46cc8f9d27e214296fafe9cfe5c057daa7626aea4c"
      }
    ],
    "blockNumber": 5848636,
    "cumulativeGasUsed": "1862208",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xbe27f32D9F731CC9DddAfE3ddaA7CBBC0f58b414",
    "0xa419003b3dbC9F888FDb761a3830E18D00c71490",
    "0x60cB672031E839a80B49Df12b3e3986b211B59Fb",
    "0xc3F95DeDacFEA28a3d657FfbCc74e9BaB6FB949B"
  ],
  "numDeployments": 1,
  "solcInputHash": "f77d36897e3ec85e8f1aed5cd075e017",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_glcr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_glcrOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Glcr\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GlcrOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Treasury\",\"outputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAdded\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"bond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondVesting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buybackAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"claimableGlcr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBondPremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlcrPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getGlcrReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBuyback\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"redeemAssetsForBuyback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isAdded\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"setAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vestingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_discount\",\"type\":\"uint256\"}],\"name\":\"setBondParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setDaoOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_glcr\",\"type\":\"address\"}],\"name\":\"setGlcr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setGlcrOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vesting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GlcrRebateTreasury.sol\":\"GlcrRebateTreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin_v4.7.3/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin_v4.7.3/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin_v4.7.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin_v4.7.3/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/GlcrRebateTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin_v4.7.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin_v4.7.3/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./interfaces/IOracle8.sol\\\";\\nimport \\\"./interfaces/ITreasury8.sol\\\";\\nimport \\\"./interfaces/lib/IUniswapV2Pair8.sol\\\";\\n\\ncontract GlcrRebateTreasury is Ownable {\\n    struct Asset {\\n        bool isAdded;\\n        uint256 multiplier; // 1100000 for 1.1 (10% discount if discount set to zero)\\n        address oracle;\\n        bool isLP;\\n        address pair;\\n    }\\n\\n    struct VestingSchedule {\\n        uint256 amount;\\n        uint256 period;\\n        uint256 end;\\n        uint256 claimed;\\n        uint256 lastClaimed;\\n    }\\n\\n    IERC20 public Glcr;\\n    IOracle public GlcrOracle;\\n    ITreasury public Treasury;\\n\\n    mapping(address => Asset) public assets;\\n    mapping(address => VestingSchedule) public vesting;\\n\\n    uint256 public discount; // 100000 for 10% discount or 1.1\\n\\n    uint256 public bondVesting = 1 days;\\n    uint256 public totalVested = 0;\\n\\n    uint256 public lastBuyback;\\n    uint256 public buybackAmount = 10 * 1e4;\\n\\n    address public immutable USDC;\\n    uint256 public constant DENOMINATOR = 1e6;\\n\\n    address public daoOperator;\\n\\n    /*\\n     * ---------\\n     * MODIFIERS\\n     * ---------\\n     */\\n\\n    // Only allow a function to be called with a bondable asset\\n\\n    modifier onlyAsset(address _token) {\\n        require(\\n            assets[_token].isAdded,\\n            \\\"RebateTreasury: token is not a bondable asset\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyDaoOperator() {\\n        require(\\n            daoOperator == msg.sender,\\n            \\\"RebateTreasury: caller is not the operator\\\"\\n        );\\n        _;\\n    }\\n\\n    /*\\n     * ------------------\\n     * EXTERNAL FUNCTIONS\\n     * ------------------\\n     */\\n\\n    // Initialize parameters\\n\\n    constructor(\\n        address _glcr,\\n        address _glcrOracle,\\n        address _treasury,\\n        address _usdc\\n    ) {\\n        Glcr = IERC20(_glcr);\\n        GlcrOracle = IOracle(_glcrOracle);\\n        Treasury = ITreasury(_treasury);\\n        USDC = _usdc;\\n        daoOperator = msg.sender;\\n    }\\n\\n    function daoFund() external view returns (address) {\\n        return Treasury.daoFund();\\n    }\\n\\n    function setDaoOperator(address _operator) external onlyOwner {\\n        daoOperator = _operator;\\n    }\\n\\n    // Bond asset for discounted Glcr at bond rate\\n\\n    function bond(address _token, uint256 _amount) external onlyAsset(_token) {\\n        require(_amount > 0, \\\"RebateTreasury: invalid bond amount\\\");\\n        uint256 glcrAmount = getGlcrReturn(_token, _amount);\\n        require(\\n            glcrAmount <= Glcr.balanceOf(address(this)) - totalVested,\\n            \\\"RebateTreasury: insufficient glcr balance\\\"\\n        );\\n\\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\\n        _claimVested(msg.sender);\\n\\n        VestingSchedule storage schedule = vesting[msg.sender];\\n        schedule.amount = schedule.amount - schedule.claimed + glcrAmount;\\n        schedule.period = bondVesting;\\n        schedule.end = block.timestamp + bondVesting;\\n        schedule.claimed = 0;\\n        schedule.lastClaimed = block.timestamp;\\n        totalVested += glcrAmount;\\n    }\\n\\n    // Claim available Glcr rewards from bonding\\n\\n    function claimRewards() external {\\n        _claimVested(msg.sender);\\n    }\\n\\n    /*\\n     * --------------------\\n     * RESTRICTED FUNCTIONS\\n     * --------------------\\n     */\\n\\n    // Set Glcr token\\n\\n    function setGlcr(address _glcr) external onlyOwner {\\n        Glcr = IERC20(_glcr);\\n    }\\n\\n    // Set Glcr oracle\\n\\n    function setGlcrOracle(address _oracle) external onlyOwner {\\n        GlcrOracle = IOracle(_oracle);\\n    }\\n\\n    // Set Glcr treasury\\n\\n    function setTreasury(address _treasury) external onlyOwner {\\n        Treasury = ITreasury(_treasury);\\n    }\\n\\n    // Set bonding parameters of token\\n\\n    function setAsset(\\n        address _token,\\n        bool _isAdded,\\n        uint256 _multiplier,\\n        address _oracle,\\n        bool _isLP,\\n        address _pair\\n    ) external onlyOwner {\\n        require(_multiplier >= 1e6);\\n        assets[_token].isAdded = _isAdded;\\n        assets[_token].multiplier = _multiplier;\\n        assets[_token].oracle = _oracle;\\n        assets[_token].isLP = _isLP;\\n        assets[_token].pair = _pair;\\n    }\\n\\n    // Set bond pricing parameters\\n\\n    function setBondParameters(uint256 _vestingPeriod, uint256 _discount)\\n        external\\n        onlyOwner\\n    {\\n        bondVesting = _vestingPeriod;\\n        discount = _discount;\\n    }\\n\\n    // Redeem assets for buyback\\n\\n    function redeemAssetsForBuyback(address[] calldata _tokens)\\n        external\\n        onlyDaoOperator\\n    {\\n        uint256 epoch = Treasury.epoch();\\n        require(lastBuyback != epoch, \\\"RebateTreasury: already bought back\\\");\\n        lastBuyback = epoch;\\n\\n        for (uint256 t = 0; t < _tokens.length; t++) {\\n            require(\\n                assets[_tokens[t]].isAdded,\\n                \\\"RebateTreasury: invalid token\\\"\\n            );\\n            IERC20 Token = IERC20(_tokens[t]);\\n            Token.transfer(Treasury.daoFund(), Token.balanceOf(address(this)));\\n        }\\n    }\\n\\n    /*\\n     * ------------------\\n     * INTERNAL FUNCTIONS\\n     * ------------------\\n     */\\n\\n    function _claimVested(address _account) internal {\\n        VestingSchedule storage schedule = vesting[_account];\\n        if (schedule.amount == 0 || schedule.amount == schedule.claimed) return;\\n        if (\\n            block.timestamp <= schedule.lastClaimed ||\\n            schedule.lastClaimed >= schedule.end\\n        ) return;\\n\\n        uint256 duration = (\\n            block.timestamp > schedule.end ? schedule.end : block.timestamp\\n        ) - schedule.lastClaimed;\\n        uint256 claimable = (schedule.amount * duration) / schedule.period;\\n        if (claimable == 0) return;\\n\\n        schedule.claimed += claimable;\\n        schedule.lastClaimed = block.timestamp > schedule.end\\n            ? schedule.end\\n            : block.timestamp;\\n        totalVested -= claimable;\\n        Glcr.transfer(_account, claimable);\\n    }\\n\\n    /*\\n     * --------------\\n     * VIEW FUNCTIONS\\n     * --------------\\n     */\\n\\n    // Calculate Glcr return of bonding amount of token\\n\\n    function getGlcrReturn(address _token, uint256 _amount)\\n        public\\n        view\\n        onlyAsset(_token)\\n        returns (uint256)\\n    {\\n        uint256 glcrPrice = getGlcrPrice();\\n        uint256 tokenPrice = getTokenPrice(_token);\\n        uint256 bondPremium = getBondPremium(_token);\\n        uint256 decimalsMultiplier = 10 **\\n            (18 - IERC20Metadata(_token).decimals());\\n        return\\n            (_amount * decimalsMultiplier * tokenPrice * bondPremium) /\\n            (DENOMINATOR * DENOMINATOR) /\\n            glcrPrice;\\n    }\\n\\n    // Calculate premium for bonds based on bonding curve\\n\\n    function getBondPremium(address _token)\\n        public\\n        view\\n        onlyAsset(_token)\\n        returns (uint256)\\n    {\\n        return ((discount + DENOMINATOR) * assets[_token].multiplier);\\n    }\\n\\n    // Get GLCR price from Oracle\\n\\n    function getGlcrPrice() public view returns (uint256) {\\n        return GlcrOracle.consult(address(Glcr), 1e18);\\n    }\\n\\n    // Get token price from Oracle\\n\\n    function getTokenPrice(address _token)\\n        public\\n        view\\n        onlyAsset(_token)\\n        returns (uint256)\\n    {\\n        Asset memory asset = assets[_token];\\n        IOracle Oracle = IOracle(asset.oracle);\\n        if (!asset.isLP) {\\n            return Oracle.consult(_token, 1e18);\\n        }\\n\\n        IUniswapV2Pair Pair = IUniswapV2Pair(asset.pair);\\n        uint256 totalPairSupply = Pair.totalSupply();\\n        address token0 = Pair.token0();\\n        address token1 = Pair.token1();\\n        (uint256 reserve0, uint256 reserve1, ) = Pair.getReserves();\\n\\n        if (token1 == USDC) {\\n            uint256 tokenPrice = Oracle.consult(token0, 1e18);\\n            return\\n                (tokenPrice * reserve0) /\\n                totalPairSupply +\\n                (reserve1 * 1e18) /\\n                totalPairSupply;\\n        } else {\\n            uint256 tokenPrice = Oracle.consult(token1, 1e18);\\n            return\\n                (tokenPrice * reserve1) /\\n                totalPairSupply +\\n                (reserve0 * 1e18) /\\n                totalPairSupply;\\n        }\\n    }\\n\\n    // Get claimable vested Glcr for account\\n    function claimableGlcr(address _account) external view returns (uint256) {\\n        VestingSchedule memory schedule = vesting[_account];\\n        if (\\n            block.timestamp <= schedule.lastClaimed ||\\n            schedule.lastClaimed >= schedule.end\\n        ) return 0;\\n        uint256 duration = (\\n            block.timestamp > schedule.end ? schedule.end : block.timestamp\\n        ) - schedule.lastClaimed;\\n        return (schedule.amount * duration) / schedule.period;\\n    }\\n}\\n\",\"keccak256\":\"0x3041544961297831190e6a621e2a3e222ce8209fd57904507bc28a7861946305\",\"license\":\"MIT\"},\"contracts/interfaces/IOracle8.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IOracle {\\n    function update() external;\\n\\n    function consult(address _token, uint256 _amountIn)\\n        external\\n        view\\n        returns (uint144 amountOut);\\n\\n    function twap(address _token, uint256 _amountIn)\\n        external\\n        view\\n        returns (uint144 _amountOut);\\n\\n    function getPegPrice() external view returns (int256);\\n\\n    function getPegPriceUpdated() external view returns (int256);\\n}\\n\",\"keccak256\":\"0x63d652f31e2fd30ba0d68a844824212c053008dc25d8c1f13d8e3efa538cf198\",\"license\":\"MIT\"},\"contracts/interfaces/ITreasury8.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\ninterface ITreasury {\\n    function daoFund() external view returns (address);\\n\\n    function epoch() external view returns (uint256);\\n\\n    function nextEpochPoint() external view returns (uint256);\\n\\n    function getSnowPrice() external view returns (uint256);\\n\\n    function buyBonds(uint256 amount, uint256 targetPrice) external;\\n\\n    function redeemBonds(uint256 amount, uint256 targetPrice) external;\\n}\\n\",\"keccak256\":\"0x32efab7471ca3b7af84b69df0be49b625617aac97a99446f0ef7839a24f29e6d\",\"license\":\"MIT\"},\"contracts/interfaces/lib/IUniswapV2Pair8.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external pure returns (string memory);\\n\\n    function symbol() external pure returns (string memory);\\n\\n    function decimals() external pure returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    function nonces(address owner) external view returns (uint256);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\n    event Burn(\\n        address indexed sender,\\n        uint256 amount0,\\n        uint256 amount1,\\n        address indexed to\\n    );\\n    event Swap(\\n        address indexed sender,\\n        uint256 amount0In,\\n        uint256 amount1In,\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n\\n    function factory() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function price0CumulativeLast() external view returns (uint256);\\n\\n    function price1CumulativeLast() external view returns (uint256);\\n\\n    function kLast() external view returns (uint256);\\n\\n    function mint(address to) external returns (uint256 liquidity);\\n\\n    function burn(address to)\\n        external\\n        returns (uint256 amount0, uint256 amount1);\\n\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n\\n    function skim(address to) external;\\n\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x17d1f5e4d5c079920de671abe8771666fb12eb39e18ed9359f9b57585d1e4d29\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052620151806007556000600855620186a0600a553480156200002457600080fd5b5060405162001f6838038062001f68833981016040819052620000479162000117565b6200005233620000aa565b600180546001600160a01b039586166001600160a01b03199182161790915560028054948616948216949094179093556003805492851692841692909217909155909116608052600b80549091163317905562000174565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200011257600080fd5b919050565b600080600080608085870312156200012e57600080fd5b6200013985620000fa565b93506200014960208601620000fa565b92506200015960408601620000fa565b91506200016960608601620000fa565b905092959194509250565b608051611dd162000197600039600081816102dd015261147a0152611dd16000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638c9bc2081161010f578063c3c4000b116100a2578063e388c42311610071578063e388c423146103c3578063f0f4426014610428578063f11b81881461043b578063f2fde38b146104c457600080fd5b8063c3c4000b14610381578063c4ebad7714610394578063d02641a0146103a7578063db0a9c3d146103ba57600080fd5b80639f882bd5116100de5780639f882bd514610335578063a515366a14610348578063aa7de5091461035b578063b6019f5b1461036e57600080fd5b80638c9bc208146102ff5780638d934f74146103125780638da5cb5b1461031a578063918f86741461032b57600080fd5b80633dd788a11161018757806364354d651161015657806364354d65146102b45780636b6f4a9d146102c7578063715018a6146102d057806389a30271146102d857600080fd5b80633dd788a11461027d578063563df32f146102865780635e5936a2146102995780635f390ec0146102a157600080fd5b80633163d1c0116101c35780633163d1c01461024457806333920e291461025757806335f41b4114610260578063372500ab1461027557600080fd5b8063199cbc54146101ea5780631fe40f8c146102065780632b04e76214610219575b600080fd5b6101f360085481565b6040519081526020015b60405180910390f35b6101f361021436600461195a565b6104d7565b60025461022c906001600160a01b031681565b6040516001600160a01b0390911681526020016101fd565b60015461022c906001600160a01b031681565b6101f360075481565b61027361026e36600461197e565b6105a0565b005b6102736105b3565b6101f360095481565b60035461022c906001600160a01b031681565b6101f36105be565b6102736102af3660046119a0565b61065a565b6102736102c236600461195a565b610a3e565b6101f360065481565b610273610a68565b61022c7f000000000000000000000000000000000000000000000000000000000000000081565b600b5461022c906001600160a01b031681565b61022c610a7a565b6000546001600160a01b031661022c565b6101f3620f424081565b610273610343366004611a23565b610b06565b610273610356366004611a9c565b610ba8565b6101f361036936600461195a565b610eaa565b6101f361037c366004611a9c565b610f6a565b61027361038f36600461195a565b6110da565b6102736103a236600461195a565b611104565b6101f36103b536600461195a565b61112e565b6101f3600a5481565b6104006103d136600461195a565b600560205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016101fd565b61027361043636600461195a565b611649565b61048c61044936600461195a565b600460205260009081526040902080546001820154600283015460039093015460ff9283169391926001600160a01b0380841693600160a01b9004909116911685565b60408051951515865260208601949094526001600160a01b03928316938501939093521515606084015216608082015260a0016101fd565b6102736104d236600461195a565b611673565b6001600160a01b0381166000908152600560209081526040808320815160a081018352815481526001820154938101939093526002810154918301919091526003810154606083015260040154608082018190524211158061054157508060400151816080015110155b1561054f5750600092915050565b6000816080015182604001514211610567574261056d565b82604001515b6105779190611ade565b9050816020015181836000015161058e9190611af7565b6105989190611b0e565b949350505050565b6105a8611703565b600791909155600655565b6105bc3361175d565b565b600254600154604051633ddac95360e01b81526001600160a01b039182166004820152670de0b6b3a764000060248201526000929190911690633ddac95390604401602060405180830381865afa15801561061d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106419190611b30565b71ffffffffffffffffffffffffffffffffffff16905090565b600b546001600160a01b031633146106df5760405162461bcd60e51b815260206004820152602a60248201527f52656261746554726561737572793a2063616c6c6572206973206e6f7420746860448201527f65206f70657261746f720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600354604080517f900cf0cf00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa158015610742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107669190611b64565b905080600954036107df5760405162461bcd60e51b815260206004820152602360248201527f52656261746554726561737572793a20616c726561647920626f75676874206260448201527f61636b000000000000000000000000000000000000000000000000000000000060648201526084016106d6565b600981905560005b82811015610a38576004600085858481811061080557610805611b7d565b905060200201602081019061081a919061195a565b6001600160a01b0316815260208101919091526040016000205460ff166108835760405162461bcd60e51b815260206004820152601d60248201527f52656261746554726561737572793a20696e76616c696420746f6b656e00000060448201526064016106d6565b600084848381811061089757610897611b7d565b90506020020160208101906108ac919061195a565b9050806001600160a01b031663a9059cbb600360009054906101000a90046001600160a01b03166001600160a01b0316638d934f746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610910573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190611b93565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190611b64565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a239190611bb0565b50508080610a3090611bcd565b9150506107e7565b50505050565b610a46611703565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b610a70611703565b6105bc60006118f5565b600354604080517f8d934f7400000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691638d934f749160048083019260209291908290030181865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b019190611b93565b905090565b610b0e611703565b620f4240841015610b1e57600080fd5b6001600160a01b039586166000908152600460205260409020805460ff191695151595909517855560018501939093556002840180549286167fffffffffffffffffffffff00000000000000000000000000000000000000000090931692909217600160a01b91151591909102179055600390910180546001600160a01b03191691909216179055565b6001600160a01b038216600090815260046020526040902054829060ff16610c285760405162461bcd60e51b815260206004820152602d60248201527f52656261746554726561737572793a20746f6b656e206973206e6f742061206260448201526c1bdb9918589b1948185cdcd95d609a1b60648201526084016106d6565b60008211610c9e5760405162461bcd60e51b815260206004820152602360248201527f52656261746554726561737572793a20696e76616c696420626f6e6420616d6f60448201527f756e74000000000000000000000000000000000000000000000000000000000060648201526084016106d6565b6000610caa8484610f6a565b6008546001546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1e9190611b64565b610d289190611ade565b811115610d9d5760405162461bcd60e51b815260206004820152602960248201527f52656261746554726561737572793a20696e73756666696369656e7420676c6360448201527f722062616c616e6365000000000000000000000000000000000000000000000060648201526084016106d6565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d9190611bb0565b50610e373361175d565b336000908152600560205260409020600381015481548391610e5891611ade565b610e629190611be6565b815560075460018201819055610e789042611be6565b600282015560006003820181905542600483015560088054849290610e9e908490611be6565b90915550505050505050565b6001600160a01b038116600090815260046020526040812054829060ff16610f2a5760405162461bcd60e51b815260206004820152602d60248201527f52656261746554726561737572793a20746f6b656e206973206e6f742061206260448201526c1bdb9918589b1948185cdcd95d609a1b60648201526084016106d6565b6001600160a01b038316600090815260046020526040902060010154600654610f5790620f424090611be6565b610f619190611af7565b91505b50919050565b6001600160a01b038216600090815260046020526040812054839060ff16610fea5760405162461bcd60e51b815260206004820152602d60248201527f52656261746554726561737572793a20746f6b656e206973206e6f742061206260448201526c1bdb9918589b1948185cdcd95d609a1b60648201526084016106d6565b6000610ff46105be565b905060006110018661112e565b9050600061100e87610eaa565b90506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611050573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110749190611bf9565b61107f906012611c1c565b61108a90600a611d19565b90508361109a620f424080611af7565b83856110a6858c611af7565b6110b09190611af7565b6110ba9190611af7565b6110c49190611b0e565b6110ce9190611b0e565b98975050505050505050565b6110e2611703565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61110c611703565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260046020526040812054829060ff166111ae5760405162461bcd60e51b815260206004820152602d60248201527f52656261746554726561737572793a20746f6b656e206973206e6f742061206260448201526c1bdb9918589b1948185cdcd95d609a1b60648201526084016106d6565b6001600160a01b03808416600090815260046020908152604091829020825160a081018452815460ff908116151582526001830154938201939093526002820154808616948201859052600160a01b90049092161515606083018190526003909101549093166080820152916112b357604051633ddac95360e01b81526001600160a01b038681166004830152670de0b6b3a76400006024830152821690633ddac95390604401602060405180830381865afa158015611272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112969190611b30565b71ffffffffffffffffffffffffffffffffffff1693505050610f64565b6000826080015190506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113209190611b64565b90506000826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113869190611b93565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ec9190611b93565b9050600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561142f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114539190611d4b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03160361158f57604051633ddac95360e01b81526001600160a01b038581166004830152670de0b6b3a7640000602483015260009190891690633ddac95390604401602060405180830381865afa158015611509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152d9190611b30565b71ffffffffffffffffffffffffffffffffffff1690508561155683670de0b6b3a7640000611af7565b6115609190611b0e565b8661156b8584611af7565b6115759190611b0e565b61157f9190611be6565b9a50505050505050505050610f64565b604051633ddac95360e01b81526001600160a01b038481166004830152670de0b6b3a7640000602483015260009190891690633ddac95390604401602060405180830381865afa1580156115e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160b9190611b30565b71ffffffffffffffffffffffffffffffffffff1690508561163484670de0b6b3a7640000611af7565b61163e9190611b0e565b8661156b8484611af7565b611651611703565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61167b611703565b6001600160a01b0381166116f75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106d6565b611700816118f5565b50565b6000546001600160a01b031633146105bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d6565b6001600160a01b038116600090815260056020526040902080541580611787575060038101548154145b15611790575050565b8060040154421115806117ab57508060020154816004015410155b156117b4575050565b60008160040154826002015442116117cc57426117d2565b82600201545b6117dc9190611ade565b9050600082600101548284600001546117f59190611af7565b6117ff9190611b0e565b90508060000361180f5750505050565b808360030160008282546118239190611be6565b909155505060028301544211611839574261183f565b82600201545b836004018190555080600860008282546118599190611ade565b90915550506001546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156118ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ee9190611bb0565b5050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461170057600080fd5b60006020828403121561196c57600080fd5b813561197781611945565b9392505050565b6000806040838503121561199157600080fd5b50508035926020909101359150565b600080602083850312156119b357600080fd5b823567ffffffffffffffff808211156119cb57600080fd5b818501915085601f8301126119df57600080fd5b8135818111156119ee57600080fd5b8660208260051b8501011115611a0357600080fd5b60209290920196919550909350505050565b801515811461170057600080fd5b60008060008060008060c08789031215611a3c57600080fd5b8635611a4781611945565b95506020870135611a5781611a15565b9450604087013593506060870135611a6e81611945565b92506080870135611a7e81611a15565b915060a0870135611a8e81611945565b809150509295509295509295565b60008060408385031215611aaf57600080fd5b8235611aba81611945565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611af157611af1611ac8565b92915050565b8082028115828204841417611af157611af1611ac8565b600082611b2b57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611b4257600080fd5b815171ffffffffffffffffffffffffffffffffffff8116811461197757600080fd5b600060208284031215611b7657600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ba557600080fd5b815161197781611945565b600060208284031215611bc257600080fd5b815161197781611a15565b600060018201611bdf57611bdf611ac8565b5060010190565b80820180821115611af157611af1611ac8565b600060208284031215611c0b57600080fd5b815160ff8116811461197757600080fd5b60ff8281168282160390811115611af157611af1611ac8565b600181815b80851115611c70578160001904821115611c5657611c56611ac8565b80851615611c6357918102915b93841c9390800290611c3a565b509250929050565b600082611c8757506001611af1565b81611c9457506000611af1565b8160018114611caa5760028114611cb457611cd0565b6001915050611af1565b60ff841115611cc557611cc5611ac8565b50506001821b611af1565b5060208310610133831016604e8410600b8410161715611cf3575081810a611af1565b611cfd8383611c35565b8060001904821115611d1157611d11611ac8565b029392505050565b600061197760ff841683611c78565b80516dffffffffffffffffffffffffffff81168114611d4657600080fd5b919050565b600080600060608486031215611d6057600080fd5b611d6984611d28565b9250611d7760208501611d28565b9150604084015163ffffffff81168114611d9057600080fd5b80915050925092509256fea2646970667358221220787448535d0b0772653ad8e6e902234de4d28fdca55025b6e924d402aab98ba464736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80638c9bc2081161010f578063c3c4000b116100a2578063e388c42311610071578063e388c423146103c3578063f0f4426014610428578063f11b81881461043b578063f2fde38b146104c457600080fd5b8063c3c4000b14610381578063c4ebad7714610394578063d02641a0146103a7578063db0a9c3d146103ba57600080fd5b80639f882bd5116100de5780639f882bd514610335578063a515366a14610348578063aa7de5091461035b578063b6019f5b1461036e57600080fd5b80638c9bc208146102ff5780638d934f74146103125780638da5cb5b1461031a578063918f86741461032b57600080fd5b80633dd788a11161018757806364354d651161015657806364354d65146102b45780636b6f4a9d146102c7578063715018a6146102d057806389a30271146102d857600080fd5b80633dd788a11461027d578063563df32f146102865780635e5936a2146102995780635f390ec0146102a157600080fd5b80633163d1c0116101c35780633163d1c01461024457806333920e291461025757806335f41b4114610260578063372500ab1461027557600080fd5b8063199cbc54146101ea5780631fe40f8c146102065780632b04e76214610219575b600080fd5b6101f360085481565b6040519081526020015b60405180910390f35b6101f361021436600461195a565b6104d7565b60025461022c906001600160a01b031681565b6040516001600160a01b0390911681526020016101fd565b60015461022c906001600160a01b031681565b6101f360075481565b61027361026e36600461197e565b6105a0565b005b6102736105b3565b6101f360095481565b60035461022c906001600160a01b031681565b6101f36105be565b6102736102af3660046119a0565b61065a565b6102736102c236600461195a565b610a3e565b6101f360065481565b610273610a68565b61022c7f000000000000000000000000000000000000000000000000000000000000000081565b600b5461022c906001600160a01b031681565b61022c610a7a565b6000546001600160a01b031661022c565b6101f3620f424081565b610273610343366004611a23565b610b06565b610273610356366004611a9c565b610ba8565b6101f361036936600461195a565b610eaa565b6101f361037c366004611a9c565b610f6a565b61027361038f36600461195a565b6110da565b6102736103a236600461195a565b611104565b6101f36103b536600461195a565b61112e565b6101f3600a5481565b6104006103d136600461195a565b600560205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016101fd565b61027361043636600461195a565b611649565b61048c61044936600461195a565b600460205260009081526040902080546001820154600283015460039093015460ff9283169391926001600160a01b0380841693600160a01b9004909116911685565b60408051951515865260208601949094526001600160a01b03928316938501939093521515606084015216608082015260a0016101fd565b6102736104d236600461195a565b611673565b6001600160a01b0381166000908152600560209081526040808320815160a081018352815481526001820154938101939093526002810154918301919091526003810154606083015260040154608082018190524211158061054157508060400151816080015110155b1561054f5750600092915050565b6000816080015182604001514211610567574261056d565b82604001515b6105779190611ade565b9050816020015181836000015161058e9190611af7565b6105989190611b0e565b949350505050565b6105a8611703565b600791909155600655565b6105bc3361175d565b565b600254600154604051633ddac95360e01b81526001600160a01b039182166004820152670de0b6b3a764000060248201526000929190911690633ddac95390604401602060405180830381865afa15801561061d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106419190611b30565b71ffffffffffffffffffffffffffffffffffff16905090565b600b546001600160a01b031633146106df5760405162461bcd60e51b815260206004820152602a60248201527f52656261746554726561737572793a2063616c6c6572206973206e6f7420746860448201527f65206f70657261746f720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600354604080517f900cf0cf00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa158015610742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107669190611b64565b905080600954036107df5760405162461bcd60e51b815260206004820152602360248201527f52656261746554726561737572793a20616c726561647920626f75676874206260448201527f61636b000000000000000000000000000000000000000000000000000000000060648201526084016106d6565b600981905560005b82811015610a38576004600085858481811061080557610805611b7d565b905060200201602081019061081a919061195a565b6001600160a01b0316815260208101919091526040016000205460ff166108835760405162461bcd60e51b815260206004820152601d60248201527f52656261746554726561737572793a20696e76616c696420746f6b656e00000060448201526064016106d6565b600084848381811061089757610897611b7d565b90506020020160208101906108ac919061195a565b9050806001600160a01b031663a9059cbb600360009054906101000a90046001600160a01b03166001600160a01b0316638d934f746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610910573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190611b93565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190611b64565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a239190611bb0565b50508080610a3090611bcd565b9150506107e7565b50505050565b610a46611703565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b610a70611703565b6105bc60006118f5565b600354604080517f8d934f7400000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691638d934f749160048083019260209291908290030181865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b019190611b93565b905090565b610b0e611703565b620f4240841015610b1e57600080fd5b6001600160a01b039586166000908152600460205260409020805460ff191695151595909517855560018501939093556002840180549286167fffffffffffffffffffffff00000000000000000000000000000000000000000090931692909217600160a01b91151591909102179055600390910180546001600160a01b03191691909216179055565b6001600160a01b038216600090815260046020526040902054829060ff16610c285760405162461bcd60e51b815260206004820152602d60248201527f52656261746554726561737572793a20746f6b656e206973206e6f742061206260448201526c1bdb9918589b1948185cdcd95d609a1b60648201526084016106d6565b60008211610c9e5760405162461bcd60e51b815260206004820152602360248201527f52656261746554726561737572793a20696e76616c696420626f6e6420616d6f60448201527f756e74000000000000000000000000000000000000000000000000000000000060648201526084016106d6565b6000610caa8484610f6a565b6008546001546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1e9190611b64565b610d289190611ade565b811115610d9d5760405162461bcd60e51b815260206004820152602960248201527f52656261746554726561737572793a20696e73756666696369656e7420676c6360448201527f722062616c616e6365000000000000000000000000000000000000000000000060648201526084016106d6565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d9190611bb0565b50610e373361175d565b336000908152600560205260409020600381015481548391610e5891611ade565b610e629190611be6565b815560075460018201819055610e789042611be6565b600282015560006003820181905542600483015560088054849290610e9e908490611be6565b90915550505050505050565b6001600160a01b038116600090815260046020526040812054829060ff16610f2a5760405162461bcd60e51b815260206004820152602d60248201527f52656261746554726561737572793a20746f6b656e206973206e6f742061206260448201526c1bdb9918589b1948185cdcd95d609a1b60648201526084016106d6565b6001600160a01b038316600090815260046020526040902060010154600654610f5790620f424090611be6565b610f619190611af7565b91505b50919050565b6001600160a01b038216600090815260046020526040812054839060ff16610fea5760405162461bcd60e51b815260206004820152602d60248201527f52656261746554726561737572793a20746f6b656e206973206e6f742061206260448201526c1bdb9918589b1948185cdcd95d609a1b60648201526084016106d6565b6000610ff46105be565b905060006110018661112e565b9050600061100e87610eaa565b90506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611050573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110749190611bf9565b61107f906012611c1c565b61108a90600a611d19565b90508361109a620f424080611af7565b83856110a6858c611af7565b6110b09190611af7565b6110ba9190611af7565b6110c49190611b0e565b6110ce9190611b0e565b98975050505050505050565b6110e2611703565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61110c611703565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260046020526040812054829060ff166111ae5760405162461bcd60e51b815260206004820152602d60248201527f52656261746554726561737572793a20746f6b656e206973206e6f742061206260448201526c1bdb9918589b1948185cdcd95d609a1b60648201526084016106d6565b6001600160a01b03808416600090815260046020908152604091829020825160a081018452815460ff908116151582526001830154938201939093526002820154808616948201859052600160a01b90049092161515606083018190526003909101549093166080820152916112b357604051633ddac95360e01b81526001600160a01b038681166004830152670de0b6b3a76400006024830152821690633ddac95390604401602060405180830381865afa158015611272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112969190611b30565b71ffffffffffffffffffffffffffffffffffff1693505050610f64565b6000826080015190506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113209190611b64565b90506000826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113869190611b93565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ec9190611b93565b9050600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561142f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114539190611d4b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03160361158f57604051633ddac95360e01b81526001600160a01b038581166004830152670de0b6b3a7640000602483015260009190891690633ddac95390604401602060405180830381865afa158015611509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152d9190611b30565b71ffffffffffffffffffffffffffffffffffff1690508561155683670de0b6b3a7640000611af7565b6115609190611b0e565b8661156b8584611af7565b6115759190611b0e565b61157f9190611be6565b9a50505050505050505050610f64565b604051633ddac95360e01b81526001600160a01b038481166004830152670de0b6b3a7640000602483015260009190891690633ddac95390604401602060405180830381865afa1580156115e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160b9190611b30565b71ffffffffffffffffffffffffffffffffffff1690508561163484670de0b6b3a7640000611af7565b61163e9190611b0e565b8661156b8484611af7565b611651611703565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61167b611703565b6001600160a01b0381166116f75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106d6565b611700816118f5565b50565b6000546001600160a01b031633146105bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d6565b6001600160a01b038116600090815260056020526040902080541580611787575060038101548154145b15611790575050565b8060040154421115806117ab57508060020154816004015410155b156117b4575050565b60008160040154826002015442116117cc57426117d2565b82600201545b6117dc9190611ade565b9050600082600101548284600001546117f59190611af7565b6117ff9190611b0e565b90508060000361180f5750505050565b808360030160008282546118239190611be6565b909155505060028301544211611839574261183f565b82600201545b836004018190555080600860008282546118599190611ade565b90915550506001546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156118ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ee9190611bb0565b5050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461170057600080fd5b60006020828403121561196c57600080fd5b813561197781611945565b9392505050565b6000806040838503121561199157600080fd5b50508035926020909101359150565b600080602083850312156119b357600080fd5b823567ffffffffffffffff808211156119cb57600080fd5b818501915085601f8301126119df57600080fd5b8135818111156119ee57600080fd5b8660208260051b8501011115611a0357600080fd5b60209290920196919550909350505050565b801515811461170057600080fd5b60008060008060008060c08789031215611a3c57600080fd5b8635611a4781611945565b95506020870135611a5781611a15565b9450604087013593506060870135611a6e81611945565b92506080870135611a7e81611a15565b915060a0870135611a8e81611945565b809150509295509295509295565b60008060408385031215611aaf57600080fd5b8235611aba81611945565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611af157611af1611ac8565b92915050565b8082028115828204841417611af157611af1611ac8565b600082611b2b57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611b4257600080fd5b815171ffffffffffffffffffffffffffffffffffff8116811461197757600080fd5b600060208284031215611b7657600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ba557600080fd5b815161197781611945565b600060208284031215611bc257600080fd5b815161197781611a15565b600060018201611bdf57611bdf611ac8565b5060010190565b80820180821115611af157611af1611ac8565b600060208284031215611c0b57600080fd5b815160ff8116811461197757600080fd5b60ff8281168282160390811115611af157611af1611ac8565b600181815b80851115611c70578160001904821115611c5657611c56611ac8565b80851615611c6357918102915b93841c9390800290611c3a565b509250929050565b600082611c8757506001611af1565b81611c9457506000611af1565b8160018114611caa5760028114611cb457611cd0565b6001915050611af1565b60ff841115611cc557611cc5611ac8565b50506001821b611af1565b5060208310610133831016604e8410600b8410161715611cf3575081810a611af1565b611cfd8383611c35565b8060001904821115611d1157611d11611ac8565b029392505050565b600061197760ff841683611c78565b80516dffffffffffffffffffffffffffff81168114611d4657600080fd5b919050565b600080600060608486031215611d6057600080fd5b611d6984611d28565b9250611d7760208501611d28565b9150604084015163ffffffff81168114611d9057600080fd5b80915050925092509256fea2646970667358221220787448535d0b0772653ad8e6e902234de4d28fdca55025b6e924d402aab98ba464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2083,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "Glcr",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)190"
      },
      {
        "astId": 2086,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "GlcrOracle",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IOracle)8512"
      },
      {
        "astId": 2089,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "Treasury",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ITreasury)8549"
      },
      {
        "astId": 2094,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "assets",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Asset)2069_storage)"
      },
      {
        "astId": 2099,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "vesting",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(VestingSchedule)2080_storage)"
      },
      {
        "astId": 2101,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "discount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 2104,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "bondVesting",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2107,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "totalVested",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 2109,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "lastBuyback",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 2114,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "buybackAmount",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 2121,
        "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
        "label": "daoOperator",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)190": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IOracle)8512": {
        "encoding": "inplace",
        "label": "contract IOracle",
        "numberOfBytes": "20"
      },
      "t_contract(ITreasury)8549": {
        "encoding": "inplace",
        "label": "contract ITreasury",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Asset)2069_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GlcrRebateTreasury.Asset)",
        "numberOfBytes": "32",
        "value": "t_struct(Asset)2069_storage"
      },
      "t_mapping(t_address,t_struct(VestingSchedule)2080_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GlcrRebateTreasury.VestingSchedule)",
        "numberOfBytes": "32",
        "value": "t_struct(VestingSchedule)2080_storage"
      },
      "t_struct(Asset)2069_storage": {
        "encoding": "inplace",
        "label": "struct GlcrRebateTreasury.Asset",
        "members": [
          {
            "astId": 2060,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "isAdded",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2062,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "multiplier",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2064,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "oracle",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 2066,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "isLP",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 2068,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "pair",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(VestingSchedule)2080_storage": {
        "encoding": "inplace",
        "label": "struct GlcrRebateTreasury.VestingSchedule",
        "members": [
          {
            "astId": 2071,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2073,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "period",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2075,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "end",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2077,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "claimed",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 2079,
            "contract": "contracts/GlcrRebateTreasury.sol:GlcrRebateTreasury",
            "label": "lastClaimed",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}